{{- $fullName := include "fullname" . -}}
{{- if .Values.secrets.enabled }}
---
apiVersion: external-secrets.io/v1beta1
kind: ExternalSecret
metadata:
  name: {{ $fullName }}-secret
  labels:
  {{- include "labels" . | nindent 4 }}
  {{- if .Values.secrets.annotations }}
  annotations:
  {{- toYaml .Values.secrets.annotations | nindent 4 }}
  {{- end }}
spec:
  refreshInterval: {{ .Values.secrets.refreshInterval | default "5m" }}
  secretStoreRef:
    kind: {{ .Values.secrets.kind | default "ClusterSecretStore" }}
    name: {{ .Values.secrets.backend }}
  target:
    name: {{ $fullName }}-secret
    creationPolicy: Owner
  dataFrom:
    - extract:
        key: {{ .Values.secrets.projectNamespace }}/{{ $fullName }}/env/{{ .Values.env }}

{{- range .Values.secrets.files }}
---
apiVersion: external-secrets.io/v1beta1
kind: ExternalSecret
metadata:
  name: {{ $fullName }}-{{ .name | replace "." "-" }}
  labels:
  {{- include "labels" $ | nindent 4 }}
  {{- if $.Values.secrets.annotations }}
  annotations:
  {{- toYaml $.Values.secrets.annotations | nindent 4 }}
  {{- end }}
spec:
  refreshInterval: {{ $.Values.secrets.refreshInterval | default "5m" }}
  secretStoreRef:
    kind: {{ $.Values.secrets.kind | default "ClusterSecretStore" }}
    name: {{ $.Values.secrets.backend }}
  target:
    name: {{ $fullName }}-{{ .name | replace "." "-" }}
    creationPolicy: Owner
  data:
    - secretKey: {{ .name }}
      remoteRef:
        key: {{ $.Values.secrets.projectNamespace }}/{{ $fullName }}/files/{{ $.Values.env }}  
        property: {{ .name }}
{{- end }}
{{- end }}

{{- if and (.Values.ingress) (eq .Values.ingress.enabled true) (eq .Values.ingress.tls true) }}
---
apiVersion: external-secrets.io/v1beta1
kind: ExternalSecret
metadata:
  name: {{ $fullName }}-tls
  labels:
  {{- include "labels" . | nindent 4 }}
  {{- if .Values.secrets.annotations }}
  annotations:
  {{- toYaml .Values.secrets.annotations | nindent 4 }}
  {{- end }}
spec:
  refreshInterval: 168h
  secretStoreRef:
    kind: {{ .Values.secrets.kind | default "ClusterSecretStore" }}
    name: {{ .Values.secrets.tls.backend | default $.Values.secrets.backend }}
  target:
    name: {{ $fullName }}-tls
    template:
      type: kubernetes.io/tls
      engineVersion: v2
      data:
        tls.crt: {{ `"{{ .crt | fromJson | values | first }}"` }}
        tls.key: {{ `"{{ .key | fromJson | values | first }}"` }}
  data:
  {{- if .Values.secrets.tls.common }}
    - secretKey: crt
      remoteRef:
        key: common/tls/crt
    - secretKey: key
      remoteRef:
        key: common/tls/key
  {{ else }}
    - secretKey: crt
      remoteRef:
        key: {{ printf "%s/%s/tls/crt" (default .Values.secrets.projectNamespace .Values.secrets.tls.custompath) $fullName | quote }}
    - secretKey: key
      remoteRef:
        key: {{ printf "%s/%s/tls/key" (default .Values.secrets.projectNamespace .Values.secrets.tls.custompath) $fullName | quote }}
  {{- end }}
{{- end }}