{
  "openapi": "3.0.1",
  "info": {
    "title": "Upstream_API",
    "description": "API-gateway системы Upstream",
    "contact": {
      "name": "Northis",
      "url": "http://northis.ru"
    },
    "version": "1.0"
  },
  "paths": {
    "/api/v1/configurator/collectors/{id}/adapters": {
      "post": {
        "tags": [
          "Collectors"
        ],
        "summary": "Добавляет адаптер к коллектору.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Идентификатор коллектора.",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "description": "Данные для создания.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Northis.Upstream.Configurator.Contracts.Dto.Collector.AdapterCreateDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created"
          },
          "409": {
            "description": "Conflict",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "Collectors"
        ],
        "summary": "Возвращает адаптеры, принадлежащие коллектору.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Идентификатор коллектора.",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "name",
            "in": "query",
            "description": "Фильтрация по имени.",
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "type",
            "in": "query",
            "description": "Фильтрация по типу.",
            "style": "form",
            "schema": {
              "$ref": "#/components/schemas/Northis.Upstream.Configurator.Contracts.Dto.Collector.AdapterTypeDto"
            }
          },
          {
            "name": "IsDescending",
            "in": "query",
            "style": "form",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "PropertyName",
            "in": "query",
            "style": "form",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Northis.Upstream.Configurator.Contracts.Dto.Collector.AdapterCollectionViewDto"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/configurator/collectors": {
      "post": {
        "tags": [
          "Collectors"
        ],
        "summary": "Создает коллектор.",
        "requestBody": {
          "description": "Данные для создания.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Northis.Upstream.Configurator.Contracts.Dto.Collector.CollectorCreateDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created"
          },
          "409": {
            "description": "Conflict",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "Collectors"
        ],
        "summary": "Возвращает коллекторы.",
        "parameters": [
          {
            "name": "CollectorId",
            "in": "query",
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Description",
            "in": "query",
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "IsDescending",
            "in": "query",
            "style": "form",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "PropertyName",
            "in": "query",
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "pageNumber",
            "in": "query",
            "description": "Номер страницы.",
            "style": "form",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "pageSize",
            "in": "query",
            "description": "Размер страницы.",
            "style": "form",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Northis.Upstream.Common.Application.Queries.Portions.PortionItems`1[Northis.Upstream.Configurator.Contracts.Dto.Collector.CollectorCollectionViewDto]"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/configurator/collectors/{id}/adapters/{adapterId}": {
      "delete": {
        "tags": [
          "Collectors"
        ],
        "summary": "Удаляет адаптер из коллектора.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Идентификатор коллектора.",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "adapterId",
            "in": "path",
            "description": "Идентификатор адаптера.",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "Collectors"
        ],
        "summary": "Возвращает адаптер.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Идентификатор коллектора.",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "adapterId",
            "in": "path",
            "description": "Идентификатор адаптера.",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Northis.Upstream.Configurator.Contracts.Dto.Collector.AdapterSingleViewDto"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Collectors"
        ],
        "summary": "Обновляет адаптер.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Идентификатор коллектора.",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "adapterId",
            "in": "path",
            "description": "Идентификатор адаптера.",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "description": "Данные для обновления.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Northis.Upstream.Configurator.Contracts.Dto.Collector.AdapterUpdateDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Northis.Upstream.Configurator.Contracts.Dto.Collector.AdapterUpdateDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Northis.Upstream.Configurator.Contracts.Dto.Collector.AdapterUpdateDto"
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "No Content"
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/configurator/collectors/{id}": {
      "delete": {
        "tags": [
          "Collectors"
        ],
        "summary": "Удаляет коллектор.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Идентификатор коллектора.",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "Collectors"
        ],
        "summary": "Возвращает коллектор.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Идентификатор коллектора.",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Northis.Upstream.Configurator.Contracts.Dto.Collector.CollectorSingleViewDto"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Collectors"
        ],
        "summary": "Обновляет коллектор.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Идентификатор коллектора.",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "description": "Данны для обновления.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Northis.Upstream.Configurator.Contracts.Dto.Collector.CollectorUpdateDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Northis.Upstream.Configurator.Contracts.Dto.Collector.CollectorUpdateDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Northis.Upstream.Configurator.Contracts.Dto.Collector.CollectorUpdateDto"
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "No Content"
          },
          "409": {
            "description": "Conflict",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/configurator/collectors/trends": {
      "post": {
        "tags": [
          "Collectors"
        ],
        "summary": "Возвращает указанную страницу описаний трендов, доступных для конфигурирования.",
        "requestBody": {
          "description": "Запрос доступных для конфигурирования трендов.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Northis.Upstream.Configurator.Contracts.Dto.Collector.TrendsForConfigure.TrendForConfigureRequestDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Northis.Upstream.Configurator.Contracts.Dto.Collector.TrendsForConfigure.TrendForConfigureRequestDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Northis.Upstream.Configurator.Contracts.Dto.Collector.TrendsForConfigure.TrendForConfigureRequestDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Список успешно получен.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Northis.Upstream.ApiGateway.Modules.Configurator.GetPagedItemsResponse`1[Northis.Upstream.ApiGateway.Modules.Configurator.Trends.Models.TrendDescriptor]"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/configurator/collectors/trendgroups/{groupId}/trends": {
      "post": {
        "tags": [
          "Collectors"
        ],
        "summary": "Возвращает тренды по указанной группе, доступные для конфигурирования.",
        "parameters": [
          {
            "name": "groupId",
            "in": "path",
            "description": "Идентификатор группы.",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "description": "Запрос доступных для конфигурирования трендов для группы.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Northis.Upstream.Configurator.Contracts.Dto.Collector.TrendsForConfigure.TrendsForConfigureByGroupRequestDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Northis.Upstream.ApiGateway.Modules.Configurator.GetPagedItemsResponse`1[Northis.Upstream.ApiGateway.Modules.Configurator.TrendGrouping.Models.Trend]"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/configurator/collectors/trends/import": {
      "post": {
        "tags": [
          "Collectors"
        ],
        "summary": "Импортирует дескрипторы трендов.",
        "requestBody": {
          "description": "Коллекция импортируемых дескрипторов трендов.",
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Northis.Upstream.Configurator.Contracts.Dto.Collector.TrendsImport.TrendDescriptorImportDto"
                }
              }
            },
            "text/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Northis.Upstream.Configurator.Contracts.Dto.Collector.TrendsImport.TrendDescriptorImportDto"
                }
              }
            },
            "application/*+json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Northis.Upstream.Configurator.Contracts.Dto.Collector.TrendsImport.TrendDescriptorImportDto"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Northis.Upstream.Configurator.Contracts.Dto.Collector.TrendsImport.ImportTrendDescriptorsResult"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/configurator/collectors/{id}/publish": {
      "post": {
        "tags": [
          "Collectors"
        ],
        "summary": "Публикует конфигурацию коллектора.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Идентификатор коллектора.",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "202": {
            "description": "Accepted"
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/configurator/collectors/trends/import/validation": {
      "post": {
        "tags": [
          "Collectors"
        ],
        "summary": "Возвращает результат проверки импортируемых дескрипторов трендов.",
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "ContentType": {
                    "type": "string"
                  },
                  "ContentDisposition": {
                    "type": "string"
                  },
                  "Headers": {
                    "type": "object",
                    "additionalProperties": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    }
                  },
                  "Length": {
                    "type": "integer",
                    "format": "int64"
                  },
                  "Name": {
                    "type": "string"
                  },
                  "FileName": {
                    "type": "string"
                  }
                }
              },
              "encoding": {
                "ContentType": {
                  "style": "form"
                },
                "ContentDisposition": {
                  "style": "form"
                },
                "Headers": {
                  "style": "form"
                },
                "Length": {
                  "style": "form"
                },
                "Name": {
                  "style": "form"
                },
                "FileName": {
                  "style": "form"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Northis.Upstream.Configurator.Contracts.Dto.Collector.TrendsImport.TrendDescriptorImportDto"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/configurator/downtimes/{id}": {
      "put": {
        "tags": [
          "Downtimes"
        ],
        "summary": "Изменяет описание простоя.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Идентификатор простоя.",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "description": "Данные для изменения.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Northis.Upstream.ApiGateway.Modules.Configurator.Downtimes.Models.DowntimeMetadataRequest"
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "No Content"
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "Downtimes"
        ],
        "summary": "Возвращает описание простоя по указанному идентификатору.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Идентификатор простоя.",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Northis.Upstream.ApiGateway.Modules.Configurator.Downtimes.Models.DowntimeMetadataDetailsView"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/configurator/downtimes": {
      "post": {
        "tags": [
          "Downtimes"
        ],
        "summary": "Создает новое описание простоя.",
        "requestBody": {
          "description": "Данные для создания.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Northis.Upstream.ApiGateway.Modules.Configurator.Downtimes.Models.DowntimeMetadataRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created"
          },
          "409": {
            "description": "Conflict",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Downtimes"
        ],
        "summary": "Удаляет указанные описания простоев.",
        "parameters": [
          {
            "name": "ids",
            "in": "query",
            "description": "Идентификаторы удаляемых простоев.",
            "style": "form",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "format": "uuid"
              }
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          }
        }
      },
      "get": {
        "tags": [
          "Downtimes"
        ],
        "summary": "Возвращает все доступные описания простоев.",
        "parameters": [
          {
            "name": "EquipmentName",
            "in": "query",
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Name",
            "in": "query",
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "SourceName",
            "in": "query",
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "SourceType",
            "in": "query",
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "IsDescending",
            "in": "query",
            "description": "Возвращает `true`, если порядок сортировки по убыванию.",
            "style": "form",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "PropertyName",
            "in": "query",
            "description": "Возвращает строковое наименование свойства, по которому производится сортировка.",
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "pageNumber",
            "in": "query",
            "description": "Номер страницы.",
            "style": "form",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "pageSize",
            "in": "query",
            "description": "Количество элементов на странице.",
            "style": "form",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Northis.Upstream.ApiGateway.Modules.Configurator.GetPagedItemsResponse`1[Northis.Upstream.ApiGateway.Modules.Configurator.Downtimes.Models.DowntimeView]"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/configurator/downtimes/telegram/parameters": {
      "get": {
        "tags": [
          "Downtimes"
        ],
        "summary": "Возвращает описания простоев по идентификаторам связанных параметров телеграмм.",
        "parameters": [
          {
            "name": "telegramId",
            "in": "query",
            "description": "Идентификатор телеграммы.",
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "parameterIds",
            "in": "query",
            "description": "Коллекция идентификаторов параметров телеграмм, для которых запрашиваются метаданные\r\nпростоев.",
            "style": "form",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Northis.Upstream.Common.Application.Relations.ObjectsRelationDto"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/configurator/downtimes/telegrams": {
      "get": {
        "tags": [
          "Downtimes"
        ],
        "summary": "Возвращает описания простоев по идентификаторам связанных телеграмм.",
        "parameters": [
          {
            "name": "telegramIds",
            "in": "query",
            "description": "Коллекция идентификаторов телеграмм, для которых запрашиваются метаданные простоев.",
            "style": "form",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Northis.Upstream.Common.Application.Relations.ObjectsRelationDto"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/configurator/equipments": {
      "get": {
        "tags": [
          "Equipments"
        ],
        "summary": "Возвращает список оборудования.",
        "parameters": [
          {
            "name": "Id",
            "in": "query",
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "EquipmentCode",
            "in": "query",
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ParentEquipmentId",
            "in": "query",
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Names",
            "in": "query",
            "style": "form",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "parentId",
            "in": "query",
            "description": "Код вышестоящего оборудования.",
            "style": "form",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Northis.Upstream.ApiGateway.Modules.Configurator.Equipments.Models.Equipment"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/configurator/mesintegration/indicators/{id}": {
      "put": {
        "tags": [
          "Indicators"
        ],
        "summary": "Изменяет индикатор.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Идентификатор индикатора.",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Данные для изменения.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Northis.Upstream.ApiGateway.Modules.Configurator.MesIntegration.Models.IndicatorChangeRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Northis.Upstream.ApiGateway.Modules.Configurator.MesIntegration.Models.IndicatorChangeRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Northis.Upstream.ApiGateway.Modules.Configurator.MesIntegration.Models.IndicatorChangeRequest"
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "No Content"
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "Indicators"
        ],
        "summary": "Возвращает индикатор.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Идентификатор.",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Northis.Upstream.ApiGateway.Modules.Configurator.MesIntegration.Models.IndicatorView"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/configurator/mesintegration/indicators": {
      "post": {
        "tags": [
          "Indicators"
        ],
        "summary": "Создает индикатор.",
        "requestBody": {
          "description": "Данные для создания.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Northis.Upstream.ApiGateway.Modules.Configurator.MesIntegration.Models.IndicatorInputRequest"
              }
            }
          }
        },
        "responses": {
          "409": {
            "description": "Conflict",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "201": {
            "description": "Created"
          }
        }
      },
      "delete": {
        "tags": [
          "Indicators"
        ],
        "summary": "Удаляет индикаторы.",
        "parameters": [
          {
            "name": "ids",
            "in": "query",
            "description": "Список идентификаторов.",
            "style": "form",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          }
        }
      },
      "get": {
        "tags": [
          "Indicators"
        ],
        "summary": "Возвращает индикаторы по указанным критериям.",
        "parameters": [
          {
            "name": "Id",
            "in": "query",
            "description": "Идентификатор.",
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Name",
            "in": "query",
            "description": "Наименование.",
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Code",
            "in": "query",
            "description": "Код.",
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "IsDescending",
            "in": "query",
            "style": "form",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "PropertyName",
            "in": "query",
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "pageNumber",
            "in": "query",
            "description": "Номер страницы.",
            "style": "form",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "pageSize",
            "in": "query",
            "description": "Количество элементов на странице.",
            "style": "form",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Northis.Upstream.ApiGateway.Modules.Configurator.GetPagedItemsResponse`1[Northis.Upstream.ApiGateway.Modules.Configurator.MesIntegration.Models.IndicatorView]"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/configurator/mesintegration/metadata/{id}": {
      "put": {
        "tags": [
          "Metadata"
        ],
        "summary": "Изменяет метаданные интеграции.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Идентификатор метаданных.",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "description": "Данные для изменения.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Northis.Upstream.ApiGateway.Modules.Configurator.MesIntegration.Models.MetadataInputRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Northis.Upstream.ApiGateway.Modules.Configurator.MesIntegration.Models.MetadataInputRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Northis.Upstream.ApiGateway.Modules.Configurator.MesIntegration.Models.MetadataInputRequest"
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "No Content"
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "Metadata"
        ],
        "summary": "Возвращает метаданные интеграции.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Идентификатор.",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Northis.Upstream.ApiGateway.Modules.Configurator.MesIntegration.Models.MetadataDetails"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/configurator/mesintegration/metadata": {
      "post": {
        "tags": [
          "Metadata"
        ],
        "summary": "Создает метаданные интеграции.",
        "requestBody": {
          "description": "Данные для создания.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Northis.Upstream.ApiGateway.Modules.Configurator.MesIntegration.Models.MetadataInputRequest"
              }
            }
          }
        },
        "responses": {
          "409": {
            "description": "Conflict",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "201": {
            "description": "Created"
          }
        }
      },
      "delete": {
        "tags": [
          "Metadata"
        ],
        "summary": "Удаляет метаданные интеграции.",
        "parameters": [
          {
            "name": "ids",
            "in": "query",
            "description": "Список идентификаторов.",
            "style": "form",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "format": "uuid"
              }
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          }
        }
      },
      "get": {
        "tags": [
          "Metadata"
        ],
        "summary": "Возвращает метаданные интеграции по указанным критериям.",
        "parameters": [
          {
            "name": "Name",
            "in": "query",
            "description": "Наименование.",
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Description",
            "in": "query",
            "description": "Описание.",
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ProductionUnitName",
            "in": "query",
            "description": "Наименование производственной единицы.",
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "IndicatorName",
            "in": "query",
            "description": "Наименование индикатора.",
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "IsFact",
            "in": "query",
            "description": "Значение, определяющее, что представлены фактические данные.",
            "style": "form",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "IsDescending",
            "in": "query",
            "style": "form",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "PropertyName",
            "in": "query",
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "pageNumber",
            "in": "query",
            "description": "Номер страницы.",
            "style": "form",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "pageSize",
            "in": "query",
            "description": "Количество элементов на странице.",
            "style": "form",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Northis.Upstream.ApiGateway.Modules.Configurator.GetPagedItemsResponse`1[Northis.Upstream.ApiGateway.Modules.Configurator.MesIntegration.Models.MetadataView]"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/configurator/mesintegration/productionunits/{id}": {
      "put": {
        "tags": [
          "ProductionUnits"
        ],
        "summary": "Изменяет производственную единицу.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Идентификатор производственной единицы.",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "description": "Данные для изменения.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Northis.Upstream.ApiGateway.Modules.Configurator.MesIntegration.Models.ProductionUnitChangeRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Northis.Upstream.ApiGateway.Modules.Configurator.MesIntegration.Models.ProductionUnitChangeRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Northis.Upstream.ApiGateway.Modules.Configurator.MesIntegration.Models.ProductionUnitChangeRequest"
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "No Content"
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "ProductionUnits"
        ],
        "summary": "Возвращает производственную единицу.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Идентификатор.",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Northis.Upstream.ApiGateway.Modules.Configurator.MesIntegration.Models.ProductionUnitView"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/configurator/mesintegration/productionunits": {
      "post": {
        "tags": [
          "ProductionUnits"
        ],
        "summary": "Создает производственную единицу.",
        "requestBody": {
          "description": "Данные для создания.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Northis.Upstream.ApiGateway.Modules.Configurator.MesIntegration.Models.ProductionUnitInputRequest"
              }
            }
          }
        },
        "responses": {
          "409": {
            "description": "Conflict",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "201": {
            "description": "Created"
          }
        }
      },
      "delete": {
        "tags": [
          "ProductionUnits"
        ],
        "summary": "Удаляет производственные единицы.",
        "parameters": [
          {
            "name": "ids",
            "in": "query",
            "description": "Список идентификаторов.",
            "style": "form",
            "schema": {
              "type": "array",
              "items": {
                "type": "integer",
                "format": "int32"
              }
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          }
        }
      },
      "get": {
        "tags": [
          "ProductionUnits"
        ],
        "summary": "Возвращает производственные единицы по указанным критериям.",
        "parameters": [
          {
            "name": "Id",
            "in": "query",
            "description": "Идентификатор.",
            "style": "form",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Name",
            "in": "query",
            "description": "Наименование.",
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Description",
            "in": "query",
            "description": "Описание.",
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "IsDescending",
            "in": "query",
            "style": "form",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "PropertyName",
            "in": "query",
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "pageNumber",
            "in": "query",
            "description": "Номер страницы.",
            "style": "form",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "pageSize",
            "in": "query",
            "description": "Количество элементов на странице.",
            "style": "form",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Northis.Upstream.ApiGateway.Modules.Configurator.GetPagedItemsResponse`1[Northis.Upstream.ApiGateway.Modules.Configurator.MesIntegration.Models.ProductionUnitView]"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/configurator/signalgroups/{groupId}/signals": {
      "post": {
        "tags": [
          "SignalGroups"
        ],
        "summary": "Добавляет сигналы signalIds в группу groupId.",
        "parameters": [
          {
            "name": "groupId",
            "in": "path",
            "description": "Группа.",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "signalIds",
            "in": "query",
            "description": "Сигналы",
            "style": "form",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "format": "uuid"
              }
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "SignalGroups"
        ],
        "summary": "Удаляет сигналы из группы.",
        "parameters": [
          {
            "name": "groupId",
            "in": "path",
            "description": "Идентификатор группы.",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "signalIds",
            "in": "query",
            "description": "Идентификаторы сигналов.",
            "style": "form",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "format": "uuid"
              }
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/configurator/signalgroups/{groupId}": {
      "patch": {
        "tags": [
          "SignalGroups"
        ],
        "summary": "Изменяет группу.",
        "parameters": [
          {
            "name": "groupId",
            "in": "path",
            "description": "Идентификатор.",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "description": "Данные для изменения.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Northis.Upstream.ApiGateway.Modules.Configurator.SignalGrouping.Models.ChangeSignalGroupRequest"
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "No Content"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "SignalGroups"
        ],
        "summary": "Удаляет группу.",
        "parameters": [
          {
            "name": "groupId",
            "in": "path",
            "description": "Идентификатор группы.",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/configurator/signalgroups": {
      "post": {
        "tags": [
          "SignalGroups"
        ],
        "summary": "Создает новую группу.",
        "requestBody": {
          "description": "Данные для создания.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Northis.Upstream.ApiGateway.Modules.Configurator.SignalGrouping.Models.CreateSignalGroupRequestData"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/configurator/signalgroups/{id}": {
      "get": {
        "tags": [
          "SignalGroups"
        ],
        "summary": "Возвращает группу по идентификатору.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Идентификатор группы.",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Northis.Upstream.ApiGateway.Modules.Configurator.SignalGrouping.Models.SignalGroup"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/configurator/signalgroups/search": {
      "post": {
        "tags": [
          "SignalGroups"
        ],
        "summary": "Возвращает группы с учетом фильтров.",
        "requestBody": {
          "description": "Набор фильтров.",
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Northis.Upstream.ApiGateway.Modules.Configurator.SignalGrouping.Models.SignalGroupFilterItemData"
                }
              }
            },
            "text/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Northis.Upstream.ApiGateway.Modules.Configurator.SignalGrouping.Models.SignalGroupFilterItemData"
                }
              }
            },
            "application/*+json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Northis.Upstream.ApiGateway.Modules.Configurator.SignalGrouping.Models.SignalGroupFilterItemData"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Northis.Upstream.ApiGateway.Modules.Configurator.SignalGrouping.Models.FilterMatchSignalGroupData"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/configurator/signalgroups/{groupId}/signals/search": {
      "post": {
        "tags": [
          "SignalGroups"
        ],
        "summary": "Возвращает сигналы указанной группы.",
        "parameters": [
          {
            "name": "groupId",
            "in": "path",
            "description": "Идентификатор группы.",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "FullPath",
            "in": "query",
            "description": "Возвращает значение фильтра по полному пути до сигнала в группе.",
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Name",
            "in": "query",
            "description": "Возвращает значение фильтра по имени.",
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Presentation",
            "in": "query",
            "description": "Возвращает значение фильтра по способу интерпретации.",
            "style": "form",
            "schema": {
              "$ref": "#/components/schemas/Northis.Upstream.ApiGateway.Modules.Configurator.Signals.Models.PresentationType"
            }
          },
          {
            "name": "SignalTypeName",
            "in": "query",
            "description": "Возвращает значение фильтра по имени типа.",
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "TrendName",
            "in": "query",
            "description": "Возвращает значение фильтра по имени тренда.",
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "IsDescending",
            "in": "query",
            "description": "Возвращает `true`, если порядок сортировки по убыванию.",
            "style": "form",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "PropertyName",
            "in": "query",
            "description": "Возвращает строковое наименование свойства, по которому производится сортировка.",
            "style": "form",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Набор фильтров.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Northis.Upstream.ApiGateway.Modules.Configurator.SignalGrouping.Models.GroupSignalsRequestCriteria"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Northis.Upstream.ApiGateway.Modules.Configurator.SignalGrouping.Models.GroupSignalsRequestCriteria"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Northis.Upstream.ApiGateway.Modules.Configurator.SignalGrouping.Models.GroupSignalsRequestCriteria"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Northis.Upstream.ApiGateway.Modules.Configurator.GetPagedItemsResponse`1[Northis.Upstream.ApiGateway.Modules.Configurator.Signals.Models.Signal]"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/configurator/signalgroups/signals/search": {
      "post": {
        "tags": [
          "SignalGroups"
        ],
        "summary": "Возвращает сигналы указанных групп.",
        "parameters": [
          {
            "name": "groupIds",
            "in": "query",
            "description": "Идентификаторы групп.",
            "style": "form",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "format": "uuid"
              }
            }
          },
          {
            "name": "FullPath",
            "in": "query",
            "description": "Возвращает значение фильтра по полному пути до сигнала в группе.",
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Name",
            "in": "query",
            "description": "Возвращает значение фильтра по имени.",
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Presentation",
            "in": "query",
            "description": "Возвращает значение фильтра по способу интерпретации.",
            "style": "form",
            "schema": {
              "$ref": "#/components/schemas/Northis.Upstream.ApiGateway.Modules.Configurator.Signals.Models.PresentationType"
            }
          },
          {
            "name": "SignalTypeName",
            "in": "query",
            "description": "Возвращает значение фильтра по имени типа.",
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "TrendName",
            "in": "query",
            "description": "Возвращает значение фильтра по имени тренда.",
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "IsDescending",
            "in": "query",
            "description": "Возвращает `true`, если порядок сортировки по убыванию.",
            "style": "form",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "PropertyName",
            "in": "query",
            "description": "Возвращает строковое наименование свойства, по которому производится сортировка.",
            "style": "form",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Набор фильтров.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Northis.Upstream.ApiGateway.Modules.Configurator.SignalGrouping.Models.GroupSignalsRequestCriteria"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Northis.Upstream.ApiGateway.Modules.Configurator.SignalGrouping.Models.GroupSignalsRequestCriteria"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Northis.Upstream.ApiGateway.Modules.Configurator.SignalGrouping.Models.GroupSignalsRequestCriteria"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Northis.Upstream.ApiGateway.Modules.Configurator.GetPagedItemsResponse`1[Northis.Upstream.ApiGateway.Modules.Configurator.Signals.Models.Signal]"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/configurator/signaltypes/{id}": {
      "put": {
        "tags": [
          "SignalTypes"
        ],
        "summary": "Изменяет данные типа сигнала.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Идентификатор типа сигнала.",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "description": "Данные для изменения.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Northis.Upstream.ApiGateway.Modules.Configurator.SignalTypes.Models.SignalTypeInputRequest"
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "Тип успешно обновлен."
          },
          "409": {
            "description": "Конфликт запроса.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "Тип не существует.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "SignalTypes"
        ],
        "summary": "Возвращает тип сигнала по уникальному идентификатору.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Идентификатор типа сигнала.",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Тип успешно получен.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Northis.Upstream.ApiGateway.Modules.Configurator.SignalTypes.Models.SignalType"
                }
              }
            }
          },
          "404": {
            "description": "Тип не найден.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/configurator/signaltypes": {
      "post": {
        "tags": [
          "SignalTypes"
        ],
        "summary": "Создает новый тип сигнала.",
        "requestBody": {
          "description": "Данные для создания.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Northis.Upstream.ApiGateway.Modules.Configurator.SignalTypes.Models.SignalTypeInputRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Тип успешно создан."
          },
          "409": {
            "description": "Конфликт запроса.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "SignalTypes"
        ],
        "summary": "Удаляет типы сигналов.",
        "parameters": [
          {
            "name": "ids",
            "in": "query",
            "description": "Идентификаторы типов.",
            "style": "form",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "format": "uuid"
              }
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Типы успешно удалены."
          }
        }
      },
      "get": {
        "tags": [
          "SignalTypes"
        ],
        "summary": "Возвращает типы сигналов по указанным критериям.",
        "parameters": [
          {
            "name": "filterName",
            "in": "query",
            "description": "Имя типа сигнала для фильтрации.",
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "IsDescending",
            "in": "query",
            "description": "Возвращает `true`, если порядок сортировки по убыванию.",
            "style": "form",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "PropertyName",
            "in": "query",
            "description": "Возвращает строковое наименование свойства, по которому производится сортировка.",
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "pageNumber",
            "in": "query",
            "description": "Номер страницы.",
            "style": "form",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "pageSize",
            "in": "query",
            "description": "Количество элементов на странице.",
            "style": "form",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Список успешно получен.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Northis.Upstream.ApiGateway.Modules.Configurator.GetPagedItemsResponse`1[Northis.Upstream.ApiGateway.Modules.Configurator.SignalTypes.Models.SignalType]"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/configurator/signals/{id}": {
      "put": {
        "tags": [
          "Signals"
        ],
        "summary": "Изменяет данные сигнала.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Идентификатор сигнала.",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "description": "Данные для изменения.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Northis.Upstream.ApiGateway.Modules.Configurator.Signals.Models.SignalInputRequest"
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "Сигнал успешно обновлен."
          },
          "409": {
            "description": "Конфликт запроса.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "Сигнал не существует.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "Signals"
        ],
        "summary": "Возвращает сигнал по уникальному идентификатору.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Идентификатор сигнала.",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Сигнал успешно получен.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Northis.Upstream.ApiGateway.Modules.Configurator.Signals.Models.SignalDetails"
                }
              }
            }
          },
          "404": {
            "description": "Сигнал не найден.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/configurator/signals": {
      "post": {
        "tags": [
          "Signals"
        ],
        "summary": "Создает новый сигнал.",
        "requestBody": {
          "description": "Данные для создания.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Northis.Upstream.ApiGateway.Modules.Configurator.Signals.Models.SignalInputRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Сигнал успешно создан."
          },
          "409": {
            "description": "Конфликт запроса.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Signals"
        ],
        "summary": "Удаляет сигналы.",
        "parameters": [
          {
            "name": "ids",
            "in": "query",
            "description": "Идентификаторы сигналов.",
            "style": "form",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "format": "uuid"
              }
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Сигналы успешно удалены."
          }
        }
      },
      "get": {
        "tags": [
          "Signals"
        ],
        "summary": "Возвращает указанную страницу сигналов.",
        "parameters": [
          {
            "name": "IsDescending",
            "in": "query",
            "description": "Возвращает `true`, если порядок сортировки по убыванию.",
            "style": "form",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "PropertyName",
            "in": "query",
            "description": "Возвращает строковое наименование свойства, по которому производится сортировка.",
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "FullPath",
            "in": "query",
            "description": "Возвращает значение фильтра по полному пути до сигнала в группе.",
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Name",
            "in": "query",
            "description": "Возвращает значение фильтра по имени.",
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Presentation",
            "in": "query",
            "description": "Возвращает значение фильтра по способу интерпретации.",
            "style": "form",
            "schema": {
              "$ref": "#/components/schemas/Northis.Upstream.ApiGateway.Modules.Configurator.Signals.Models.PresentationType"
            }
          },
          {
            "name": "SignalTypeName",
            "in": "query",
            "description": "Возвращает значение фильтра по имени типа.",
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "TrendName",
            "in": "query",
            "description": "Возвращает значение фильтра по имени тренда.",
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "pageNumber",
            "in": "query",
            "description": "Номер страницы.",
            "style": "form",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "pageSize",
            "in": "query",
            "description": "Количество элементов на странице.",
            "style": "form",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Список успешно получен.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Northis.Upstream.ApiGateway.Modules.Configurator.GetPagedItemsResponse`1[Northis.Upstream.ApiGateway.Modules.Configurator.Signals.Models.Signal]"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/configurator/signals/import": {
      "post": {
        "tags": [
          "Signals"
        ],
        "summary": "Импортирует сигналы.",
        "requestBody": {
          "description": "Коллекция данных импортируемых сигналов.",
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Northis.Upstream.ApiGateway.Modules.Configurator.Signals.Models.SignalImport"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "integer",
                    "format": "int32"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "integer",
                    "format": "int32"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "integer",
                    "format": "int32"
                  }
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/configurator/signals/import/validation": {
      "post": {
        "tags": [
          "Signals"
        ],
        "summary": "Возвращает результат проверки импортируемых сигналов.",
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "ContentType": {
                    "type": "string"
                  },
                  "ContentDisposition": {
                    "type": "string"
                  },
                  "Headers": {
                    "type": "object",
                    "additionalProperties": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    }
                  },
                  "Length": {
                    "type": "integer",
                    "format": "int64"
                  },
                  "Name": {
                    "type": "string"
                  },
                  "FileName": {
                    "type": "string"
                  }
                }
              },
              "encoding": {
                "ContentType": {
                  "style": "form"
                },
                "ContentDisposition": {
                  "style": "form"
                },
                "Headers": {
                  "style": "form"
                },
                "Length": {
                  "style": "form"
                },
                "Name": {
                  "style": "form"
                },
                "FileName": {
                  "style": "form"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Northis.Upstream.ApiGateway.Modules.Configurator.Signals.Models.SignalImport"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/configurator/export/mes/signals/{id}": {
      "put": {
        "tags": [
          "SignalsMesExportMetadata"
        ],
        "summary": "Изменяет уже существующие данные экспорта сигнала.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Идентификатор метаданных.",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "description": "Новые данные.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Northis.Upstream.ApiGateway.Modules.Configurator.SignalsMesExportMetadata.Models.SignalMesExportMetadataInputRequest"
              }
            }
          }
        },
        "responses": {
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "204": {
            "description": "No Content"
          }
        }
      },
      "get": {
        "tags": [
          "SignalsMesExportMetadata"
        ],
        "summary": "Возвращает метаданные экспорта сигнала по его идентификатору.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Идентификатор метаданных.",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Northis.Upstream.MesConnector.Contracts.SignalMesExportMetadataViewDto"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/configurator/export/mes/signals": {
      "post": {
        "tags": [
          "SignalsMesExportMetadata"
        ],
        "summary": "Создает набор данных об экспорте сигналов.",
        "requestBody": {
          "description": "Данные для экспорта.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Northis.Upstream.ApiGateway.Modules.Configurator.SignalsMesExportMetadata.Models.SignalMesExportMetadataInputRequest"
              }
            }
          }
        },
        "responses": {
          "409": {
            "description": "Conflict",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "201": {
            "description": "Created"
          }
        }
      },
      "delete": {
        "tags": [
          "SignalsMesExportMetadata"
        ],
        "summary": "Удаляет метаданные об экспорте сигналов.",
        "parameters": [
          {
            "name": "ids",
            "in": "query",
            "description": "Набор удаляемых сигналов.",
            "style": "form",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "format": "uuid"
              }
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          }
        }
      },
      "get": {
        "tags": [
          "SignalsMesExportMetadata"
        ],
        "summary": "Возвращает постраничный список метаданных экспорта сигналов.",
        "parameters": [
          {
            "name": "EquipmentName",
            "in": "query",
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Parameter",
            "in": "query",
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "SignalName",
            "in": "query",
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "IsDescending",
            "in": "query",
            "description": "Возвращает `true`, если порядок сортировки по убыванию.",
            "style": "form",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "PropertyName",
            "in": "query",
            "description": "Возвращает строковое наименование свойства, по которому производится сортировка.",
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "pageNumber",
            "in": "query",
            "description": "Номер запрошенной страницы.",
            "style": "form",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "pageSize",
            "in": "query",
            "description": "Размер запрошенной страницы.",
            "style": "form",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Northis.Upstream.Common.Application.Queries.Portions.PortionItems`1[Northis.Upstream.MesConnector.Contracts.SignalMesExportMetadataViewDto]"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/configurator/telegrams/{id}": {
      "patch": {
        "tags": [
          "Telegrams"
        ],
        "summary": "Изменяет описание телеграммы.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Идентификатор телеграммы.",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Данные для изменения.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Northis.Upstream.ApiGateway.Modules.Configurator.Telegrams.Models.ChangeTelegramDescriptorRequestData"
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "Телеграмма успешно обновлена."
          },
          "400": {
            "description": "Неверные данные для обновления.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "Телеграмма не существует.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "Telegrams"
        ],
        "summary": "Возвращает описание телеграммы по уникальному идентификатору.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Идентификатор телеграммы.",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Телеграмма успешно получена.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Northis.Upstream.ApiGateway.Modules.Configurator.Telegrams.Models.TelegramDescriptor"
                }
              }
            }
          },
          "404": {
            "description": "Телеграмма не найдена.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/configurator/telegrams/{telegramId}/activate": {
      "post": {
        "tags": [
          "Telegrams"
        ],
        "summary": "Активирует указанную телеграмму.",
        "parameters": [
          {
            "name": "telegramId",
            "in": "path",
            "description": "Идентификатор телеграммы.",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Таблица успешно создана."
          },
          "400": {
            "description": "Неверные данные для создания таблицы.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "Указанная телеграмма не найдена.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/configurator/telegrams": {
      "post": {
        "tags": [
          "Telegrams"
        ],
        "summary": "Создает новое описание телеграммы.",
        "requestBody": {
          "description": "Данные для создания.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Northis.Upstream.ApiGateway.Modules.Configurator.Telegrams.Models.CreateTelegramDescriptorRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Телеграмма успешно создана."
          },
          "400": {
            "description": "Неверные данные.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Telegrams"
        ],
        "summary": "Удаляет описания телеграмм.",
        "parameters": [
          {
            "name": "ids",
            "in": "query",
            "description": "Идентификаторы телеграмм.",
            "style": "form",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Телеграммы успешно удалены."
          },
          "404": {
            "description": "Телеграмма не существует.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "Telegrams"
        ],
        "summary": "Возвращает указанную страницу описаний телеграмм с указаной размерностью.\r\nВ случае отсутствия одного или всех параметров возвращает все описания телеграмм.",
        "parameters": [
          {
            "name": "DisplayName",
            "in": "query",
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "State",
            "in": "query",
            "style": "form",
            "schema": {
              "$ref": "#/components/schemas/Northis.Upstream.Configurator.Contracts.Dto.TelegramDescriptor.DescriptorState"
            }
          },
          {
            "name": "TelegramId",
            "in": "query",
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "IsDescending",
            "in": "query",
            "description": "Возвращает `true`, если порядок сортировки по убыванию.",
            "style": "form",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "PropertyName",
            "in": "query",
            "description": "Возвращает строковое наименование свойства, по которому производится сортировка.",
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "pageNumber",
            "in": "query",
            "description": "Номер страницы.",
            "style": "form",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "pageSize",
            "in": "query",
            "description": "Количество элементов на странице.",
            "style": "form",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Список успешно получен.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Northis.Upstream.ApiGateway.Modules.Configurator.GetPagedItemsResponse`1[Northis.Upstream.ApiGateway.Modules.Configurator.Telegrams.Models.TelegramDescriptor]"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/configurator/telegrams/{id}/parameters": {
      "get": {
        "tags": [
          "Telegrams"
        ],
        "summary": "Возвращает параметры телеграммы.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Идентификатор телеграммы.",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "DisplayName",
            "in": "query",
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ParameterId",
            "in": "query",
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "TypeName",
            "in": "query",
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "IsDescending",
            "in": "query",
            "description": "Возвращает `true`, если порядок сортировки по убыванию.",
            "style": "form",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "PropertyName",
            "in": "query",
            "description": "Возвращает строковое наименование свойства, по которому производится сортировка.",
            "style": "form",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Параметры успешно получены.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Northis.Upstream.ApiGateway.Modules.Configurator.Telegrams.Models.ParameterDescriptor"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/configurator/telegrams/exist": {
      "get": {
        "tags": [
          "Telegrams"
        ],
        "summary": "Возвращает наличие записей в таблицах телеграмм.",
        "parameters": [
          {
            "name": "telegramIds",
            "in": "query",
            "description": "Список идентификаторов телеграмм.",
            "style": "form",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Параметры успешно получены.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "boolean"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/configurator/trendgroups/{groupId}/trends": {
      "post": {
        "tags": [
          "TrendGroups"
        ],
        "summary": "Добавляет тренды в группу.",
        "parameters": [
          {
            "name": "groupId",
            "in": "path",
            "description": "Идентификатор группы.",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "trendsIds",
            "in": "query",
            "description": "Идентификаторы добавляемых трендов.",
            "style": "form",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "TrendGroups"
        ],
        "summary": "Удаляет тренды из группы.",
        "parameters": [
          {
            "name": "groupId",
            "in": "path",
            "description": "Идентификатор группы.",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "trendsIds",
            "in": "query",
            "description": "Идентификаторы удаляемых трендов.",
            "style": "form",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/configurator/trendgroups/{groupId}": {
      "patch": {
        "tags": [
          "TrendGroups"
        ],
        "summary": "Изменяет группу трендов.",
        "parameters": [
          {
            "name": "groupId",
            "in": "path",
            "description": "Идентификатор изменяемой группы.",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "description": "Данные для изменения.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Northis.Upstream.ApiGateway.Modules.Configurator.TrendGrouping.Models.ChangeTrendGroupRequest"
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "No Content"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "TrendGroups"
        ],
        "summary": "Удаляет группу.",
        "parameters": [
          {
            "name": "groupId",
            "in": "path",
            "description": "Идентификатор группы.",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "TrendGroups"
        ],
        "summary": "Возвращает информацию об указанной группе.",
        "parameters": [
          {
            "name": "groupId",
            "in": "path",
            "description": "Идентификатор группы трендов.",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/configurator/trendgroups": {
      "post": {
        "tags": [
          "TrendGroups"
        ],
        "summary": "Создает новую группу трендов.",
        "requestBody": {
          "description": "Данные для создания.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Northis.Upstream.ApiGateway.Modules.Configurator.TrendGrouping.Models.CreateTrendGroupRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/configurator/trendgroups/suitabletrends": {
      "post": {
        "tags": [
          "TrendGroups"
        ],
        "summary": "Возвращает доступные для группировки тренды.",
        "parameters": [
          {
            "name": "DisplayName",
            "in": "query",
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "TrendId",
            "in": "query",
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "TypeName",
            "in": "query",
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "IsDescending",
            "in": "query",
            "description": "Возвращает `true`, если порядок сортировки по убыванию.",
            "style": "form",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "PropertyName",
            "in": "query",
            "description": "Возвращает строковое наименование свойства, по которому производится сортировка.",
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "pageNumber",
            "in": "query",
            "description": "Номер страницы.",
            "style": "form",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "pageSize",
            "in": "query",
            "description": "Количество описаний трендов на странице.",
            "style": "form",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Northis.Upstream.ApiGateway.Generic.Models.PagedItems`1[Northis.Upstream.ApiGateway.Modules.Configurator.TrendGrouping.Models.Trend]"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/configurator/trendgroups/search": {
      "post": {
        "tags": [
          "TrendGroups"
        ],
        "summary": "Возвращает список групп.",
        "parameters": [
          {
            "name": "typeKind",
            "in": "query",
            "description": "Вид типа тренда.",
            "style": "form",
            "schema": {
              "$ref": "#/components/schemas/Northis.Upstream.ApiGateway.Modules.Configurator.Trends.Models.TypeKind"
            }
          }
        ],
        "requestBody": {
          "description": "Набор фильтров.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Northis.Upstream.ApiGateway.Modules.Configurator.TrendGrouping.Models.GroupFilterRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Northis.Upstream.ApiGateway.Modules.Configurator.TrendGrouping.Models.TrendGroup"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/configurator/trendgroups/{groupId}/trends/search": {
      "post": {
        "tags": [
          "TrendGroups"
        ],
        "summary": "Возвращает тренды по указанной группе.",
        "parameters": [
          {
            "name": "groupId",
            "in": "path",
            "description": "Идентификатор группы.",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "Name",
            "in": "query",
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "TrendTypeKind",
            "in": "query",
            "style": "form",
            "schema": {
              "$ref": "#/components/schemas/Northis.Upstream.Configurator.Contracts.Dto.TrendDescriptor.TypeKindDto"
            }
          },
          {
            "name": "TypeName",
            "in": "query",
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "IsDescending",
            "in": "query",
            "description": "Возвращает `true`, если порядок сортировки по убыванию.",
            "style": "form",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "PropertyName",
            "in": "query",
            "description": "Возвращает строковое наименование свойства, по которому производится сортировка.",
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "pageNumber",
            "in": "query",
            "description": "Номер страницы.",
            "style": "form",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "pageSize",
            "in": "query",
            "description": "Количество описаний трендов на странице.",
            "style": "form",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "description": "Критерии фильтрации по группам и трендам.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Northis.Upstream.ApiGateway.Modules.Configurator.TrendGrouping.Models.TrendsByGroupRequestCriteria"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Northis.Upstream.ApiGateway.Modules.Configurator.GetPagedItemsResponse`1[Northis.Upstream.ApiGateway.Modules.Configurator.TrendGrouping.Models.Trend]"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/configurator/trendgroups/trends/search": {
      "post": {
        "tags": [
          "TrendGroups"
        ],
        "summary": "Возвращает тренды по указанным группам.",
        "parameters": [
          {
            "name": "groupIds",
            "in": "query",
            "description": "Идентификаторы групп.",
            "style": "form",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "format": "uuid"
              }
            }
          }
        ],
        "requestBody": {
          "description": "Критерии запроса.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Northis.Upstream.ApiGateway.Modules.Configurator.TrendGrouping.Models.TrendsByGroupRequestCriteria"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Northis.Upstream.ApiGateway.Modules.Configurator.GetPagedItemsResponse`1[Northis.Upstream.ApiGateway.Modules.Configurator.TrendGrouping.Models.Trend]"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/configurator/trendkafkaexportmetadata/{id}": {
      "put": {
        "tags": [
          "TrendKafkaExportMetadata"
        ],
        "summary": "Изменяет метаданные экспорта тренда.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Идентификатор экспорта тренда.",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "description": "Данные для изменения.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Northis.Upstream.ApiGateway.Modules.Configurator.TrendKafkaExportMetadata.Models.TrendKafkaExportMetadataInputRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Northis.Upstream.ApiGateway.Modules.Configurator.TrendKafkaExportMetadata.Models.TrendKafkaExportMetadataInputRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Northis.Upstream.ApiGateway.Modules.Configurator.TrendKafkaExportMetadata.Models.TrendKafkaExportMetadataInputRequest"
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "No Content"
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "TrendKafkaExportMetadata"
        ],
        "summary": "Возвращает метаданные экспорта тренда.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Идентификатор.",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Northis.Upstream.ApiGateway.Modules.Configurator.TrendKafkaExportMetadata.Models.TrendKafkaExportMetadataDetails"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/configurator/trendkafkaexportmetadata": {
      "post": {
        "tags": [
          "TrendKafkaExportMetadata"
        ],
        "summary": "Создает новые метаданные экспорта тренда.",
        "requestBody": {
          "description": "Данные для создания.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Northis.Upstream.ApiGateway.Modules.Configurator.TrendKafkaExportMetadata.Models.TrendKafkaExportMetadataInputRequest"
              }
            }
          }
        },
        "responses": {
          "409": {
            "description": "Conflict",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "201": {
            "description": "Created"
          }
        }
      },
      "delete": {
        "tags": [
          "TrendKafkaExportMetadata"
        ],
        "summary": "Удаляет метаданные экспорта трендов.",
        "parameters": [
          {
            "name": "ids",
            "in": "query",
            "description": "Список идентификаторов.",
            "style": "form",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "format": "uuid"
              }
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          }
        }
      },
      "get": {
        "tags": [
          "TrendKafkaExportMetadata"
        ],
        "summary": "Возвращает метаданные экспорта трендов по указанным критериям.",
        "parameters": [
          {
            "name": "Comment",
            "in": "query",
            "description": "Возвращает фильтр по комментарию.",
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "DataTopic",
            "in": "query",
            "description": "Возвращает фильтр по топику для отправки данных тренда.",
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "MetadataTopic",
            "in": "query",
            "description": "Возвращает фильтр по топику для отправки метаданных тренда.",
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "TrendId",
            "in": "query",
            "description": "Возвращает фильтр по идентификатору тренда.",
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "TrendName",
            "in": "query",
            "description": "Возвращает фильтр по имени тренда.",
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "IsDescending",
            "in": "query",
            "style": "form",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "PropertyName",
            "in": "query",
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "pageNumber",
            "in": "query",
            "description": "Номер страницы.",
            "style": "form",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "pageSize",
            "in": "query",
            "description": "Количество элементов на странице.",
            "style": "form",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Northis.Upstream.Common.Application.Queries.Portions.PortionItems`1[Northis.Upstream.ApiGateway.Modules.Configurator.TrendKafkaExportMetadata.Models.TrendKafkaExportMetadataView]"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/configurator/trends/{trendId}/activate": {
      "post": {
        "tags": [
          "Trends"
        ],
        "summary": "Активирует указанный тренд.",
        "parameters": [
          {
            "name": "trendId",
            "in": "path",
            "description": "Идентификатор тренда.",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Таблица успешно создана."
          },
          "400": {
            "description": "Неверные данные для создания таблицы.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "Указанный тренд не найден..",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/configurator/trends/exist": {
      "get": {
        "tags": [
          "Trends"
        ],
        "summary": "Возвращает наличие записей в таблицах трендов.",
        "parameters": [
          {
            "name": "trendIds",
            "in": "query",
            "description": "Список идентификаторов трендов.",
            "style": "form",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Параметры успешно получены.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "boolean"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/configurator/trends/{id}": {
      "patch": {
        "tags": [
          "Trends"
        ],
        "summary": "Изменяет описание тренда.",
        "description": "Список aggregationMetadata обязателен.\r\nВсе значения aggrFunc: Sum, Avg.\r\nВсе значения period: Min, Hour.\r\nРегистр важен.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Идентификатор тренда.",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Данные для изменения.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Northis.Upstream.ApiGateway.Modules.Configurator.Trends.Models.ChangeTrendDescriptorRequest"
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "Тренд успешно обновлен."
          },
          "400": {
            "description": "Неверные данные для обновления.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "Тренд не существует.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "Trends"
        ],
        "summary": "Возвращает описание тренда по уникальному идентификатору.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Идентификатор тренда.",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Тренд успешно получен.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Northis.Upstream.ApiGateway.Modules.Configurator.Trends.Models.TrendDescriptorDetails"
                }
              }
            }
          },
          "404": {
            "description": "Тренд не найден.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/configurator/trends": {
      "post": {
        "tags": [
          "Trends"
        ],
        "summary": "Создает новое описание тренда.",
        "description": "Список aggregationMetadata обязателен.\r\nВсе значения aggrFunc: Sum, Avg.\r\nВсе значения period: Min, Hour.\r\nРегистр важен.",
        "requestBody": {
          "description": "Данные для создания.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Northis.Upstream.ApiGateway.Modules.Configurator.Trends.Models.CreateTrendDescriptorRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Тренд успешно создан."
          },
          "400": {
            "description": "Неверные данные.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Trends"
        ],
        "summary": "Удаляет описания трендов.",
        "parameters": [
          {
            "name": "ids",
            "in": "query",
            "description": "Идентификаторы трендов.",
            "style": "form",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Тренды успешно удалены."
          },
          "404": {
            "description": "Тренд не существует.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "Trends"
        ],
        "summary": "Возвращает указанную страницу описаний трендов.\r\nВ случае отсутствия одного или всех параметров возвращает все описания трендов.",
        "parameters": [
          {
            "name": "IsDescending",
            "in": "query",
            "description": "Возвращает `true`, если порядок сортировки по убыванию.",
            "style": "form",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "PropertyName",
            "in": "query",
            "description": "Возвращает строковое наименование свойства, по которому производится сортировка.",
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "DisplayName",
            "in": "query",
            "description": "Возвращает наименование тренда.",
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "State",
            "in": "query",
            "description": "Возвращает состояние (Ready, NotReady).",
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "TrendId",
            "in": "query",
            "description": "Возвращает идентификатор тренда.",
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "TypeKind",
            "in": "query",
            "description": "Возвращает вид типа тренда.",
            "style": "form",
            "schema": {
              "$ref": "#/components/schemas/Northis.Upstream.ApiGateway.Modules.Configurator.Trends.Models.TypeKind"
            }
          },
          {
            "name": "TypeName",
            "in": "query",
            "description": "Возвращает наименование типа.",
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "pageNumber",
            "in": "query",
            "description": "Номер страницы.",
            "style": "form",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "pageSize",
            "in": "query",
            "description": "Количество элементов на странице.",
            "style": "form",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Список успешно получен.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Northis.Upstream.ApiGateway.Modules.Configurator.GetPagedItemsResponse`1[Northis.Upstream.ApiGateway.Modules.Configurator.Trends.Models.TrendDescriptor]"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/configurator/trends/relations": {
      "get": {
        "tags": [
          "Trends"
        ],
        "summary": "Возвращает связи по идентификаторам трендов.",
        "parameters": [
          {
            "name": "ids",
            "in": "query",
            "description": "Идентификаторы трендов.",
            "style": "form",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Northis.Upstream.Common.Application.Relations.ObjectsRelationDto"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/configurator/trends/signal/relations": {
      "get": {
        "tags": [
          "Trends"
        ],
        "summary": "Возвращает связи с сигналами по идентификаторам трендов.",
        "parameters": [
          {
            "name": "ids",
            "in": "query",
            "description": "Идентификаторы трендов.",
            "style": "form",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Northis.Upstream.Common.Application.Relations.ObjectsRelationDto"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/configurator/trends/{id}/signals": {
      "get": {
        "tags": [
          "Trends"
        ],
        "summary": "Возвращает наименования сигналов по идентификатору тренда.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Идентификатор тренда.",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/configurator/trends/import": {
      "post": {
        "tags": [
          "Trends"
        ],
        "summary": "Импортирует тренды.",
        "requestBody": {
          "description": "Коллекция данных импортируемых трендов.",
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Northis.Upstream.ApiGateway.Modules.Configurator.Trends.Models.TrendImport"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/configurator/trends/import/validation": {
      "post": {
        "tags": [
          "Trends"
        ],
        "summary": "Возвращает результат проверки импортируемых трендов.",
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "ContentType": {
                    "type": "string"
                  },
                  "ContentDisposition": {
                    "type": "string"
                  },
                  "Headers": {
                    "type": "object",
                    "additionalProperties": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    }
                  },
                  "Length": {
                    "type": "integer",
                    "format": "int64"
                  },
                  "Name": {
                    "type": "string"
                  },
                  "FileName": {
                    "type": "string"
                  }
                }
              },
              "encoding": {
                "ContentType": {
                  "style": "form"
                },
                "ContentDisposition": {
                  "style": "form"
                },
                "Headers": {
                  "style": "form"
                },
                "Length": {
                  "style": "form"
                },
                "Name": {
                  "style": "form"
                },
                "FileName": {
                  "style": "form"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Northis.Upstream.ApiGateway.Modules.Configurator.Trends.Models.TrendImport"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/configurator/trends/lastdatadates": {
      "get": {
        "tags": [
          "Trends"
        ],
        "summary": "Возвращает даты последнего обновления.",
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/v1/configurator/typesmetadata/numeric/{id}": {
      "put": {
        "tags": [
          "TypesMetadata"
        ],
        "summary": "Изменяет числовой тип.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Идентификатор типа.",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "description": "Данные для изменения.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Northis.Upstream.ApiGateway.Modules.Configurator.Types.Models.ChangeNumericTypeRequest"
              }
            }
          }
        },
        "responses": {
          "202": {
            "description": "Accepted",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "description": "Неверные данные для изменения.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "404": {
            "description": "Тип не существует.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "204": {
            "description": "Тип успешно изменен."
          }
        }
      },
      "get": {
        "tags": [
          "TypesMetadata"
        ],
        "summary": "Возвращает числовой тип по указанному идентификатору.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Тип успешно получен.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Northis.Upstream.ApiGateway.Modules.Configurator.Types.Models.NumericTypeMetadata"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/configurator/typesmetadata/valueset/{id}": {
      "put": {
        "tags": [
          "TypesMetadata"
        ],
        "summary": "Изменяет тип с набором значений.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Идентификатор типа.",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "description": "Данные для изменения.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Northis.Upstream.ApiGateway.Modules.Configurator.Types.Models.ChangeValueSetTypeRequest"
              }
            }
          }
        },
        "responses": {
          "202": {
            "description": "Accepted",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "description": "Неверные данные для изменения.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "404": {
            "description": "Тип не существует.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "204": {
            "description": "Тип успешно изменен."
          }
        }
      },
      "get": {
        "tags": [
          "TypesMetadata"
        ],
        "summary": "Возвращает тип с набором значений по уникальному идентификатору.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Идентификатор типа.",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Тип успешно получен.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Northis.Upstream.ApiGateway.Modules.Configurator.Types.Models.ValueSetTypeMetadata"
                }
              }
            }
          },
          "404": {
            "description": "Тип не найден.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/configurator/typesmetadata/numeric": {
      "post": {
        "tags": [
          "TypesMetadata"
        ],
        "summary": "Создает новый числовой тип.",
        "requestBody": {
          "description": "Данные для создания.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Northis.Upstream.ApiGateway.Modules.Configurator.Types.Models.CreateNumericTypeRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Тип успешно создан."
          },
          "400": {
            "description": "Неверные данные.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "404": {
            "description": "Метаданные не найдены.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "TypesMetadata"
        ],
        "summary": "Удаляет числовые типы.",
        "parameters": [
          {
            "name": "ids",
            "in": "query",
            "description": "Список уникальных идентификаторов.",
            "style": "form",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "format": "uuid"
              }
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "404": {
            "description": "Тип не существует.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "204": {
            "description": "Типы успешно удалены."
          }
        }
      },
      "get": {
        "tags": [
          "TypesMetadata"
        ],
        "summary": "Возвращает числовые типы.\r\nВозвращает указанную страницу числовых типов.\r\nВ случае отсутствия одного или всех параметров возвращает все числовые типы.",
        "parameters": [
          {
            "name": "pageNumber",
            "in": "query",
            "style": "form",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "pageSize",
            "in": "query",
            "style": "form",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Список успешно получен.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Northis.Upstream.ApiGateway.Modules.Configurator.GetPagedItemsResponse`1[Northis.Upstream.ApiGateway.Modules.Configurator.Types.Models.NumericTypeMetadata]"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/configurator/typesmetadata/valueset": {
      "post": {
        "tags": [
          "TypesMetadata"
        ],
        "summary": "Создает новый тип с набором значений.",
        "requestBody": {
          "description": "Данные для создания.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Northis.Upstream.ApiGateway.Modules.Configurator.Types.Models.CreateValueSetTypeRequest"
              }
            }
          }
        },
        "responses": {
          "400": {
            "description": "Неверные данные.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "404": {
            "description": "Метаданные не найдены.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "201": {
            "description": "Тип успешно создан."
          }
        }
      },
      "delete": {
        "tags": [
          "TypesMetadata"
        ],
        "summary": "Удаляет типы с набором значений.",
        "parameters": [
          {
            "name": "ids",
            "in": "query",
            "description": "Список уникальных идентификаторов.",
            "style": "form",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "format": "uuid"
              }
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Типы успешно удалены."
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                }
              },
              "application/json": {
                "schema": {
                  "type": "string"
                }
              },
              "text/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "404": {
            "description": "Тип не существует.",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                }
              },
              "application/json": {
                "schema": {
                  "type": "string"
                }
              },
              "text/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "TypesMetadata"
        ],
        "summary": "Возвращает указанную страницу типов с набором значений.\r\nВ случае отсутствия одного или всех параметров возвращает все типы с набором значений.",
        "parameters": [
          {
            "name": "pageNumber",
            "in": "query",
            "style": "form",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "pageSize",
            "in": "query",
            "style": "form",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Список успешно получен.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Northis.Upstream.ApiGateway.Modules.Configurator.GetPagedItemsResponse`1[Northis.Upstream.ApiGateway.Modules.Configurator.Types.Models.ValueSetTypeMetadata]"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/configurator/typesmetadata/relations": {
      "get": {
        "tags": [
          "TypesMetadata"
        ],
        "summary": "Возвращает связи по идентификаторам типов метаданных.",
        "parameters": [
          {
            "name": "ids",
            "in": "query",
            "description": "Идентификаторы типов метаданных.",
            "style": "form",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "format": "uuid"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Northis.Upstream.Common.Application.Relations.ObjectsRelationDto"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/configurator/typesmetadata": {
      "get": {
        "tags": [
          "TypesMetadata"
        ],
        "summary": "Возвращает указанную страницу типов.\r\nВ случае отсутсвия одного или всех параметров возвращает все типы.",
        "parameters": [
          {
            "name": "IsDescending",
            "in": "query",
            "description": "Возвращает `true`, если порядок сортировки по убыванию.",
            "style": "form",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "PropertyName",
            "in": "query",
            "description": "Возвращает строковое наименование свойства, по которому производится сортировка.",
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "DisplayName",
            "in": "query",
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Type",
            "in": "query",
            "style": "form",
            "schema": {
              "$ref": "#/components/schemas/Northis.Upstream.Configurator.Contracts.Dto.TypeMetadata.MetadataType"
            }
          },
          {
            "name": "pageNumber",
            "in": "query",
            "description": "Номер страницы.",
            "style": "form",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "pageSize",
            "in": "query",
            "description": "Количество элементов на странице.",
            "style": "form",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Список успешно получен.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Northis.Upstream.ApiGateway.Modules.Configurator.GetPagedItemsResponse`1[Northis.Upstream.ApiGateway.Modules.Configurator.Types.Models.TypeMetadata]"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "Microsoft.AspNetCore.Mvc.ProblemDetails": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "nullable": true
          },
          "title": {
            "type": "string",
            "nullable": true
          },
          "status": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "detail": {
            "type": "string",
            "nullable": true
          },
          "instance": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": { }
      },
      "Northis.Upstream.ApiGateway.Generic.Models.PagedItems`1[Northis.Upstream.ApiGateway.Modules.Configurator.TrendGrouping.Models.Trend]": {
        "type": "object",
        "properties": {
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Northis.Upstream.ApiGateway.Modules.Configurator.TrendGrouping.Models.Trend"
            },
            "description": "Возвращает набор результирующих элементов на странице."
          },
          "totalCount": {
            "type": "integer",
            "description": "Возвращает общее количество элементов выборки.",
            "format": "int32",
            "example": 1984
          }
        },
        "additionalProperties": false,
        "description": "Определяет элементы страницы, возвращаемой по критериям запроса."
      },
      "Northis.Upstream.ApiGateway.Modules.Configurator.Downtimes.Models.Condition": {
        "type": "object",
        "properties": {
          "duration": {
            "type": "integer",
            "description": "Возвращает длительность выполнения условия в секундах.",
            "format": "int32"
          },
          "isAbsolute": {
            "type": "boolean",
            "description": "Возвращает флаг, определяющий необходимость считать значения по модулю."
          },
          "operation": {
            "$ref": "#/components/schemas/Northis.Upstream.ApiGateway.Modules.Configurator.Downtimes.Models.ConditionOperationKind"
          },
          "sourceValue": {
            "type": "number",
            "description": "Возвращает значение источника для сравнения.",
            "format": "float"
          }
        },
        "additionalProperties": false,
        "description": "Определяет данные условия простоя."
      },
      "Northis.Upstream.ApiGateway.Modules.Configurator.Downtimes.Models.ConditionOperationKind": {
        "enum": [
          "Equals",
          "LessThan",
          "GreaterThan",
          "GreaterThanOrEqual",
          "LessThanOrEqual",
          "NotEqual"
        ],
        "type": "string",
        "description": "Определяет операции условия простоя."
      },
      "Northis.Upstream.ApiGateway.Modules.Configurator.Downtimes.Models.DowntimeMetadataDetailsView": {
        "type": "object",
        "properties": {
          "beginCondition": {
            "$ref": "#/components/schemas/Northis.Upstream.ApiGateway.Modules.Configurator.Downtimes.Models.Condition"
          },
          "endCondition": {
            "$ref": "#/components/schemas/Northis.Upstream.ApiGateway.Modules.Configurator.Downtimes.Models.Condition"
          },
          "equipment": {
            "$ref": "#/components/schemas/Northis.Upstream.ApiGateway.Modules.Configurator.Downtimes.Models.EquipmentDowntime"
          },
          "id": {
            "type": "string",
            "description": "Возвращает идентификатор.",
            "format": "uuid"
          },
          "name": {
            "type": "string",
            "description": "Возвращает наименование."
          },
          "parameterId": {
            "type": "string",
            "description": "Возвращает идентификатор параметра телеграммы.",
            "nullable": true
          },
          "source": {
            "$ref": "#/components/schemas/Northis.Upstream.ApiGateway.Modules.Configurator.Downtimes.Models.SourceDowntime"
          }
        },
        "additionalProperties": false,
        "description": "Определяет детали метаданных простоя."
      },
      "Northis.Upstream.ApiGateway.Modules.Configurator.Downtimes.Models.DowntimeMetadataRequest": {
        "type": "object",
        "properties": {
          "beginCondition": {
            "$ref": "#/components/schemas/Northis.Upstream.ApiGateway.Modules.Configurator.Downtimes.Models.Condition"
          },
          "endCondition": {
            "$ref": "#/components/schemas/Northis.Upstream.ApiGateway.Modules.Configurator.Downtimes.Models.Condition"
          },
          "equipmentId": {
            "type": "string",
            "description": "Возвращает идентификатор оборудования.",
            "nullable": true
          },
          "name": {
            "type": "string",
            "description": "Возвращает наименование."
          },
          "parameterId": {
            "type": "string",
            "description": "Возвращает идентификатор параметра телеграммы.",
            "nullable": true
          },
          "sourceId": {
            "type": "string",
            "description": "Возвращает идентификатор источника."
          }
        },
        "additionalProperties": false,
        "description": "Определяет данные для создания метаданных простоя."
      },
      "Northis.Upstream.ApiGateway.Modules.Configurator.Downtimes.Models.DowntimeView": {
        "type": "object",
        "properties": {
          "equipmentName": {
            "type": "string",
            "description": "Возвращает наименование оборудования.",
            "nullable": true
          },
          "id": {
            "type": "string",
            "description": "Возвращает идентификатор.",
            "format": "uuid"
          },
          "name": {
            "type": "string",
            "description": "Возвращает наименование."
          },
          "sourceName": {
            "type": "string",
            "description": "Возвращает наименование источника."
          },
          "sourceType": {
            "$ref": "#/components/schemas/Northis.Upstream.ApiGateway.Modules.Configurator.Downtimes.Models.SourceType"
          }
        },
        "additionalProperties": false,
        "description": "Определяет метаданные простоя."
      },
      "Northis.Upstream.ApiGateway.Modules.Configurator.Downtimes.Models.EquipmentDowntime": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Возвращает идентификатор."
          },
          "name": {
            "type": "string",
            "description": "Возвращает наименование."
          }
        },
        "additionalProperties": false,
        "description": "Определяет детали оборудования в простое."
      },
      "Northis.Upstream.ApiGateway.Modules.Configurator.Downtimes.Models.SourceDowntime": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Возвращает идентификатор."
          },
          "name": {
            "type": "string",
            "description": "Возвращает наименование."
          },
          "type": {
            "$ref": "#/components/schemas/Northis.Upstream.ApiGateway.Modules.Configurator.Downtimes.Models.SourceType"
          }
        },
        "additionalProperties": false,
        "description": "Определяет данные источника простоя."
      },
      "Northis.Upstream.ApiGateway.Modules.Configurator.Downtimes.Models.SourceType": {
        "enum": [
          "Trend",
          "Telegram"
        ],
        "type": "string",
        "description": "Определяет тип источника."
      },
      "Northis.Upstream.ApiGateway.Modules.Configurator.Equipments.Models.Equipment": {
        "type": "object",
        "properties": {
          "equipmentCode": {
            "type": "string",
            "description": "Возвращает код оборудования."
          },
          "hasChildren": {
            "type": "boolean",
            "description": "Возвращает флаг, наличие нижестоящего оборудования.",
            "nullable": true
          },
          "id": {
            "type": "string",
            "description": "Возвращает идентификатор."
          },
          "isFilteredSatisfied": {
            "type": "boolean",
            "description": "Возвращает флаг, определяющий, соответствует ли оборудование критериям фильтрации.",
            "nullable": true
          },
          "name": {
            "type": "string",
            "description": "Возвращает наименование."
          },
          "parentId": {
            "type": "string",
            "description": "Возвращает идентификатор базового оборудования.",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Определяет описание оборудования."
      },
      "Northis.Upstream.ApiGateway.Modules.Configurator.GetPagedItemsResponse`1[Northis.Upstream.ApiGateway.Modules.Configurator.Downtimes.Models.DowntimeView]": {
        "type": "object",
        "properties": {
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Northis.Upstream.ApiGateway.Modules.Configurator.Downtimes.Models.DowntimeView"
            },
            "description": "Массив элементов."
          },
          "totalCount": {
            "type": "integer",
            "description": "Общее число элементов.",
            "format": "int32"
          }
        },
        "additionalProperties": false,
        "description": "Определяет данные получения элементов запрошеного типа."
      },
      "Northis.Upstream.ApiGateway.Modules.Configurator.GetPagedItemsResponse`1[Northis.Upstream.ApiGateway.Modules.Configurator.MesIntegration.Models.IndicatorView]": {
        "type": "object",
        "properties": {
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Northis.Upstream.ApiGateway.Modules.Configurator.MesIntegration.Models.IndicatorView"
            },
            "description": "Массив элементов."
          },
          "totalCount": {
            "type": "integer",
            "description": "Общее число элементов.",
            "format": "int32"
          }
        },
        "additionalProperties": false,
        "description": "Определяет данные получения элементов запрошеного типа."
      },
      "Northis.Upstream.ApiGateway.Modules.Configurator.GetPagedItemsResponse`1[Northis.Upstream.ApiGateway.Modules.Configurator.MesIntegration.Models.MetadataView]": {
        "type": "object",
        "properties": {
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Northis.Upstream.ApiGateway.Modules.Configurator.MesIntegration.Models.MetadataView"
            },
            "description": "Массив элементов."
          },
          "totalCount": {
            "type": "integer",
            "description": "Общее число элементов.",
            "format": "int32"
          }
        },
        "additionalProperties": false,
        "description": "Определяет данные получения элементов запрошеного типа."
      },
      "Northis.Upstream.ApiGateway.Modules.Configurator.GetPagedItemsResponse`1[Northis.Upstream.ApiGateway.Modules.Configurator.MesIntegration.Models.ProductionUnitView]": {
        "type": "object",
        "properties": {
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Northis.Upstream.ApiGateway.Modules.Configurator.MesIntegration.Models.ProductionUnitView"
            },
            "description": "Массив элементов."
          },
          "totalCount": {
            "type": "integer",
            "description": "Общее число элементов.",
            "format": "int32"
          }
        },
        "additionalProperties": false,
        "description": "Определяет данные получения элементов запрошеного типа."
      },
      "Northis.Upstream.ApiGateway.Modules.Configurator.GetPagedItemsResponse`1[Northis.Upstream.ApiGateway.Modules.Configurator.SignalTypes.Models.SignalType]": {
        "type": "object",
        "properties": {
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Northis.Upstream.ApiGateway.Modules.Configurator.SignalTypes.Models.SignalType"
            },
            "description": "Массив элементов."
          },
          "totalCount": {
            "type": "integer",
            "description": "Общее число элементов.",
            "format": "int32"
          }
        },
        "additionalProperties": false,
        "description": "Определяет данные получения элементов запрошеного типа."
      },
      "Northis.Upstream.ApiGateway.Modules.Configurator.GetPagedItemsResponse`1[Northis.Upstream.ApiGateway.Modules.Configurator.Signals.Models.Signal]": {
        "type": "object",
        "properties": {
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Northis.Upstream.ApiGateway.Modules.Configurator.Signals.Models.Signal"
            },
            "description": "Массив элементов."
          },
          "totalCount": {
            "type": "integer",
            "description": "Общее число элементов.",
            "format": "int32"
          }
        },
        "additionalProperties": false,
        "description": "Определяет данные получения элементов запрошеного типа."
      },
      "Northis.Upstream.ApiGateway.Modules.Configurator.GetPagedItemsResponse`1[Northis.Upstream.ApiGateway.Modules.Configurator.Telegrams.Models.TelegramDescriptor]": {
        "type": "object",
        "properties": {
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Northis.Upstream.ApiGateway.Modules.Configurator.Telegrams.Models.TelegramDescriptor"
            },
            "description": "Массив элементов."
          },
          "totalCount": {
            "type": "integer",
            "description": "Общее число элементов.",
            "format": "int32"
          }
        },
        "additionalProperties": false,
        "description": "Определяет данные получения элементов запрошеного типа."
      },
      "Northis.Upstream.ApiGateway.Modules.Configurator.GetPagedItemsResponse`1[Northis.Upstream.ApiGateway.Modules.Configurator.TrendGrouping.Models.Trend]": {
        "type": "object",
        "properties": {
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Northis.Upstream.ApiGateway.Modules.Configurator.TrendGrouping.Models.Trend"
            },
            "description": "Массив элементов."
          },
          "totalCount": {
            "type": "integer",
            "description": "Общее число элементов.",
            "format": "int32"
          }
        },
        "additionalProperties": false,
        "description": "Определяет данные получения элементов запрошеного типа."
      },
      "Northis.Upstream.ApiGateway.Modules.Configurator.GetPagedItemsResponse`1[Northis.Upstream.ApiGateway.Modules.Configurator.Trends.Models.TrendDescriptor]": {
        "type": "object",
        "properties": {
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Northis.Upstream.ApiGateway.Modules.Configurator.Trends.Models.TrendDescriptor"
            },
            "description": "Массив элементов."
          },
          "totalCount": {
            "type": "integer",
            "description": "Общее число элементов.",
            "format": "int32"
          }
        },
        "additionalProperties": false,
        "description": "Определяет данные получения элементов запрошеного типа."
      },
      "Northis.Upstream.ApiGateway.Modules.Configurator.GetPagedItemsResponse`1[Northis.Upstream.ApiGateway.Modules.Configurator.Types.Models.NumericTypeMetadata]": {
        "type": "object",
        "properties": {
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Northis.Upstream.ApiGateway.Modules.Configurator.Types.Models.NumericTypeMetadata"
            },
            "description": "Массив элементов."
          },
          "totalCount": {
            "type": "integer",
            "description": "Общее число элементов.",
            "format": "int32"
          }
        },
        "additionalProperties": false,
        "description": "Определяет данные получения элементов запрошеного типа."
      },
      "Northis.Upstream.ApiGateway.Modules.Configurator.GetPagedItemsResponse`1[Northis.Upstream.ApiGateway.Modules.Configurator.Types.Models.TypeMetadata]": {
        "type": "object",
        "properties": {
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Northis.Upstream.ApiGateway.Modules.Configurator.Types.Models.TypeMetadata"
            },
            "description": "Массив элементов."
          },
          "totalCount": {
            "type": "integer",
            "description": "Общее число элементов.",
            "format": "int32"
          }
        },
        "additionalProperties": false,
        "description": "Определяет данные получения элементов запрошеного типа."
      },
      "Northis.Upstream.ApiGateway.Modules.Configurator.GetPagedItemsResponse`1[Northis.Upstream.ApiGateway.Modules.Configurator.Types.Models.ValueSetTypeMetadata]": {
        "type": "object",
        "properties": {
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Northis.Upstream.ApiGateway.Modules.Configurator.Types.Models.ValueSetTypeMetadata"
            },
            "description": "Массив элементов."
          },
          "totalCount": {
            "type": "integer",
            "description": "Общее число элементов.",
            "format": "int32"
          }
        },
        "additionalProperties": false,
        "description": "Определяет данные получения элементов запрошеного типа."
      },
      "Northis.Upstream.ApiGateway.Modules.Configurator.MesIntegration.Models.IndicatorChangeRequest": {
        "type": "object",
        "properties": {
          "code": {
            "type": "string",
            "description": "Возвращает код индикатора."
          },
          "name": {
            "type": "string",
            "description": "Возвращает наименование индикатора."
          }
        },
        "additionalProperties": false,
        "description": "Определяет данные для изменения индикаторов."
      },
      "Northis.Upstream.ApiGateway.Modules.Configurator.MesIntegration.Models.IndicatorInputRequest": {
        "type": "object",
        "properties": {
          "code": {
            "type": "string",
            "description": "Возвращает код индикатора."
          },
          "id": {
            "type": "string",
            "description": "Возвращает идентификатор индикатора."
          },
          "name": {
            "type": "string",
            "description": "Возвращает наименование индикатора."
          }
        },
        "additionalProperties": false,
        "description": "Определяет входные данные для конфигурирования индикаторов."
      },
      "Northis.Upstream.ApiGateway.Modules.Configurator.MesIntegration.Models.IndicatorView": {
        "type": "object",
        "properties": {
          "code": {
            "type": "string",
            "description": "Возвращает код индикатора."
          },
          "id": {
            "type": "string",
            "description": "Возвращает идентификатор индикатора."
          },
          "name": {
            "type": "string",
            "description": "Возвращает наименование индикатора."
          }
        },
        "additionalProperties": false,
        "description": "Определяет данные индикатора для отображения."
      },
      "Northis.Upstream.ApiGateway.Modules.Configurator.MesIntegration.Models.MetadataDetails": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Идентификатор.",
            "format": "uuid"
          },
          "name": {
            "type": "string",
            "description": "Наименование."
          },
          "description": {
            "type": "string",
            "description": "Описание.",
            "nullable": true
          },
          "indicator": {
            "$ref": "#/components/schemas/Northis.Upstream.ApiGateway.Modules.Configurator.MesIntegration.Models.MetadataIndicator"
          },
          "productionUnit": {
            "$ref": "#/components/schemas/Northis.Upstream.ApiGateway.Modules.Configurator.MesIntegration.Models.MetadataProductionUnit"
          },
          "isFact": {
            "type": "boolean",
            "description": "Значение, определяющее, что представлены фактические данные."
          }
        },
        "additionalProperties": false,
        "description": "Определяет метаданные."
      },
      "Northis.Upstream.ApiGateway.Modules.Configurator.MesIntegration.Models.MetadataIndicator": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Идентификатор."
          },
          "name": {
            "type": "string",
            "description": "Наименование."
          }
        },
        "additionalProperties": false,
        "description": "Определяет индикатор для представления метаданных."
      },
      "Northis.Upstream.ApiGateway.Modules.Configurator.MesIntegration.Models.MetadataInputRequest": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Наименование."
          },
          "description": {
            "type": "string",
            "description": "Описание.",
            "nullable": true
          },
          "indicatorId": {
            "type": "string",
            "description": "Идентификатор индикатора."
          },
          "productionUnitId": {
            "type": "integer",
            "description": "Идентификатор производственной единицы.",
            "format": "int32"
          },
          "isFact": {
            "type": "boolean",
            "description": "Значение, определяющее, что представлены фактические данные."
          }
        },
        "additionalProperties": false,
        "description": "Определяет входные данные для конфигурирования метаданных."
      },
      "Northis.Upstream.ApiGateway.Modules.Configurator.MesIntegration.Models.MetadataProductionUnit": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "description": "Идентификатор.",
            "format": "int32"
          },
          "name": {
            "type": "string",
            "description": "Наименование."
          }
        },
        "additionalProperties": false,
        "description": "Определяет производственную единицу для представления метаданных."
      },
      "Northis.Upstream.ApiGateway.Modules.Configurator.MesIntegration.Models.MetadataView": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Идентификатор.",
            "format": "uuid"
          },
          "name": {
            "type": "string",
            "description": "Наименование."
          },
          "description": {
            "type": "string",
            "description": "Описание.",
            "nullable": true
          },
          "indicatorName": {
            "type": "string",
            "description": "Наименование индикатора."
          },
          "productionUnitName": {
            "type": "string",
            "description": "Наименование производственной единицы."
          },
          "isFact": {
            "type": "boolean",
            "description": "Значение, определяющее, что представлены фактические данные."
          }
        },
        "additionalProperties": false,
        "description": "Определяет представление метаданных для отображения."
      },
      "Northis.Upstream.ApiGateway.Modules.Configurator.MesIntegration.Models.ProductionUnitChangeRequest": {
        "type": "object",
        "properties": {
          "description": {
            "type": "string",
            "description": "Возвращает описание производственной единицы."
          },
          "name": {
            "type": "string",
            "description": "Возвращает наименование производственной единицы."
          }
        },
        "additionalProperties": false,
        "description": "Определяет данные для изменения производственной единицы."
      },
      "Northis.Upstream.ApiGateway.Modules.Configurator.MesIntegration.Models.ProductionUnitInputRequest": {
        "type": "object",
        "properties": {
          "description": {
            "type": "string",
            "description": "Возвращает описание производственной единицы."
          },
          "id": {
            "type": "integer",
            "description": "Возвращает идентификатор производственной единицы.",
            "format": "int32"
          },
          "name": {
            "type": "string",
            "description": "Возвращает наименование производственной единицы."
          }
        },
        "additionalProperties": false,
        "description": "Определяет входные данные для производственной единицы."
      },
      "Northis.Upstream.ApiGateway.Modules.Configurator.MesIntegration.Models.ProductionUnitView": {
        "type": "object",
        "properties": {
          "description": {
            "type": "string",
            "description": "Возвращает описание производственной единицы."
          },
          "id": {
            "type": "integer",
            "description": "Возвращает идентификатор производственной единицы.",
            "format": "int32"
          },
          "name": {
            "type": "string",
            "description": "Возвращает наименование производственной единицы."
          }
        },
        "additionalProperties": false,
        "description": "Определяет данные для отображения производственной единицы."
      },
      "Northis.Upstream.ApiGateway.Modules.Configurator.PageCriteria": {
        "type": "object",
        "properties": {
          "pageNumber": {
            "type": "integer",
            "description": "Возвращает или устанавливает номер страницы для выборки.",
            "format": "int32",
            "nullable": true
          },
          "pageSize": {
            "type": "integer",
            "description": "Возвращает или устанавливает количество объектов, которые необходимо получить (размер страницы).",
            "format": "int32",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Представляет настройки страничной выборки."
      },
      "Northis.Upstream.ApiGateway.Modules.Configurator.SignalGrouping.Models.ChangeSignalGroupRequest": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Новое имя группы."
          }
        },
        "additionalProperties": false,
        "description": "Представляет запрос изменения группы."
      },
      "Northis.Upstream.ApiGateway.Modules.Configurator.SignalGrouping.Models.CreateSignalGroupRequestData": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Имя группы."
          },
          "parentId": {
            "type": "string",
            "description": "Идентификатор родительской группы.",
            "format": "uuid",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Представляет данные для запроса создания группы сигналов."
      },
      "Northis.Upstream.ApiGateway.Modules.Configurator.SignalGrouping.Models.FilterMatchSignalGroupData": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Идентификатор.",
            "format": "uuid"
          },
          "name": {
            "type": "string",
            "description": "Имя группы."
          },
          "parentId": {
            "type": "string",
            "description": "Идентификатор родительской группы.",
            "format": "uuid",
            "nullable": true
          },
          "isFilteredSatisfied": {
            "type": "boolean",
            "description": "Признак, удовлетворяет ли группа критериям фильтрации."
          }
        },
        "additionalProperties": false,
        "description": "Представляет данные фильтрации групп сигналов."
      },
      "Northis.Upstream.ApiGateway.Modules.Configurator.SignalGrouping.Models.GroupSignalsRequestCriteria": {
        "type": "object",
        "properties": {
          "filters": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Northis.Upstream.ApiGateway.Modules.Configurator.SignalGrouping.Models.SignalGroupFilterItemData"
            },
            "description": "Возвращает критерии фильтрации.",
            "nullable": true
          },
          "page": {
            "$ref": "#/components/schemas/Northis.Upstream.ApiGateway.Modules.Configurator.PageCriteria"
          }
        },
        "additionalProperties": false,
        "description": "Представляет критерии запроса группы сигналов."
      },
      "Northis.Upstream.ApiGateway.Modules.Configurator.SignalGrouping.Models.SignalGroup": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Идентификатор группы.",
            "format": "uuid"
          },
          "name": {
            "type": "string",
            "description": "Имя группы."
          }
        },
        "additionalProperties": false,
        "description": "Представляет группу сигналов."
      },
      "Northis.Upstream.ApiGateway.Modules.Configurator.SignalGrouping.Models.SignalGroupFilterItemData": {
        "type": "object",
        "properties": {
          "groupName": {
            "type": "string",
            "description": "Имя группы.",
            "nullable": true
          },
          "signalName": {
            "type": "string",
            "description": "Имя сигнала.",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Представляет данные фильтрации групп сигналов."
      },
      "Northis.Upstream.ApiGateway.Modules.Configurator.SignalTypes.Models.SignalType": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Возвращает идентификатор.",
            "format": "uuid"
          },
          "name": {
            "type": "string",
            "description": "Возвращает наименование типа сигнала."
          }
        },
        "additionalProperties": false,
        "description": "Определяет данные типа сигнала."
      },
      "Northis.Upstream.ApiGateway.Modules.Configurator.SignalTypes.Models.SignalTypeInputRequest": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Возвращает наименование типа сигнала."
          }
        },
        "additionalProperties": false,
        "description": "Определяет входные данные для конфигурирования типа сигнала."
      },
      "Northis.Upstream.ApiGateway.Modules.Configurator.Signals.Models.ImportValidationStatus": {
        "enum": [
          "NoError",
          "TrendIsNotExists",
          "SignalNameIsEmpty",
          "SignalAsAccumulatorHasAvgPresent",
          "SignalIsNotUnique",
          "SignalGroupNameIsEmpty",
          "NormalizationIsNotFull",
          "InvalidNormalizationRange"
        ],
        "type": "string",
        "description": "Перечисляет статусы валидации импорта сигналов."
      },
      "Northis.Upstream.ApiGateway.Modules.Configurator.Signals.Models.NormalizationInfo": {
        "type": "object",
        "properties": {
          "maxDest": {
            "type": "number",
            "description": "Возвращает максимальную границу нормализованного значения тренда.",
            "format": "float"
          },
          "maxSource": {
            "type": "number",
            "description": "Возвращает максимальную границу исходного значения тренда.",
            "format": "float"
          },
          "minDest": {
            "type": "number",
            "description": "Возвращает минимальную границу нормализованного значения тренда.",
            "format": "float"
          },
          "minSource": {
            "type": "number",
            "description": "Возвращает минимальную границу исходного значения тренда.",
            "format": "float"
          }
        },
        "additionalProperties": false,
        "description": "Представляет настройки нормализации значений связанного с сигналом тренда."
      },
      "Northis.Upstream.ApiGateway.Modules.Configurator.Signals.Models.PresentationType": {
        "enum": [
          "Sum",
          "Avg",
          "WorkTime",
          "Performance"
        ],
        "type": "string",
        "description": "Определяет тип представления значений."
      },
      "Northis.Upstream.ApiGateway.Modules.Configurator.Signals.Models.RelatedSignalType": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Возвращает идентификатор.",
            "format": "uuid"
          },
          "name": {
            "type": "string",
            "description": "Возвращает наименование типа сигнала."
          }
        },
        "additionalProperties": false,
        "description": "Представляет связанный тип сигнала."
      },
      "Northis.Upstream.ApiGateway.Modules.Configurator.Signals.Models.RelatedTrend": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Возвращает идентификатор тренда."
          },
          "name": {
            "type": "string",
            "description": "Возвращает имя тренда."
          }
        },
        "additionalProperties": false,
        "description": "Представляет тренд, связанный с сигналом."
      },
      "Northis.Upstream.ApiGateway.Modules.Configurator.Signals.Models.Signal": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Возвращает уникальный идентификатор.",
            "format": "uuid"
          },
          "name": {
            "type": "string",
            "description": "Возвращает имя сигнала."
          },
          "presentation": {
            "$ref": "#/components/schemas/Northis.Upstream.ApiGateway.Modules.Configurator.Signals.Models.PresentationType"
          },
          "signalTypeName": {
            "type": "string",
            "description": "Возвращает наименование типа сигнала.",
            "nullable": true
          },
          "trendName": {
            "type": "string",
            "description": "Возвращает имя тренда."
          }
        },
        "additionalProperties": false,
        "description": "Определяет данные метаданных сигнала."
      },
      "Northis.Upstream.ApiGateway.Modules.Configurator.Signals.Models.SignalDetails": {
        "type": "object",
        "properties": {
          "decimalDigitsCount": {
            "type": "integer",
            "description": "Возвращает количество десятичных разрядов.",
            "format": "int32"
          },
          "id": {
            "type": "string",
            "description": "Возвращает уникальный идентификатор.",
            "format": "uuid"
          },
          "isAccumulator": {
            "type": "boolean",
            "description": "Возвращает значение, определяющее, что сигнал представляет накопительный счетчик."
          },
          "name": {
            "type": "string",
            "description": "Возвращает имя сигнала."
          },
          "normalization": {
            "$ref": "#/components/schemas/Northis.Upstream.ApiGateway.Modules.Configurator.Signals.Models.NormalizationInfo"
          },
          "presentation": {
            "$ref": "#/components/schemas/Northis.Upstream.ApiGateway.Modules.Configurator.Signals.Models.PresentationType"
          },
          "signalType": {
            "$ref": "#/components/schemas/Northis.Upstream.ApiGateway.Modules.Configurator.Signals.Models.RelatedSignalType"
          },
          "sumDivisor": {
            "type": "number",
            "description": "Возвращает делитель для суммы.",
            "format": "float",
            "nullable": true
          },
          "trend": {
            "$ref": "#/components/schemas/Northis.Upstream.ApiGateway.Modules.Configurator.Signals.Models.RelatedTrend"
          },
          "workMinValue": {
            "type": "number",
            "description": "Возвращает минимальное значение в работе.",
            "format": "float",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Определяет данные метаданных сигнала в детальном виде."
      },
      "Northis.Upstream.ApiGateway.Modules.Configurator.Signals.Models.SignalImport": {
        "type": "object",
        "properties": {
          "decimalDigitsCount": {
            "type": "integer",
            "description": "Возвращает количество десятичных разрядов (знаков после запятой).",
            "format": "int32"
          },
          "group": {
            "type": "string",
            "description": "Возвращает полный путь к сигналу в группе.",
            "nullable": true
          },
          "index": {
            "type": "integer",
            "description": "Возвращает индекс в массиве импортируемых записей.",
            "format": "int32",
            "nullable": true
          },
          "isAccumulator": {
            "type": "boolean",
            "description": "Возвращает значение, определяющее, что сигнал представляет накопительный счетчик."
          },
          "maxDest": {
            "type": "number",
            "description": "Возвращает максимальную границу нормализованного значения тренда.",
            "format": "float",
            "nullable": true
          },
          "maxSource": {
            "type": "number",
            "description": "Возвращает максимальную границу исходного значения тренда.",
            "format": "float",
            "nullable": true
          },
          "minDest": {
            "type": "number",
            "description": "Возвращает минимальную границу нормализованного значения тренда.",
            "format": "float",
            "nullable": true
          },
          "minSource": {
            "type": "number",
            "description": "Возвращает минимальную границу исходного значения тренда.",
            "format": "float",
            "nullable": true
          },
          "name": {
            "type": "string",
            "description": "Возвращает наименование."
          },
          "presentation": {
            "$ref": "#/components/schemas/Northis.Upstream.ApiGateway.Modules.Configurator.Signals.Models.PresentationType"
          },
          "signalType": {
            "type": "string",
            "description": "Возвращает наименование типа сигнала.",
            "nullable": true
          },
          "sumDivisor": {
            "type": "number",
            "description": "Возвращает делитель для суммы.",
            "format": "float",
            "nullable": true
          },
          "trend": {
            "$ref": "#/components/schemas/Northis.Upstream.ApiGateway.Modules.Configurator.Signals.Models.RelatedTrend"
          },
          "validationStatus": {
            "$ref": "#/components/schemas/Northis.Upstream.ApiGateway.Modules.Configurator.Signals.Models.ImportValidationStatus"
          },
          "workMinValue": {
            "type": "number",
            "description": "Возвращает минимальное значение в работе.",
            "format": "float",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Определяет данные импортируемого сигнала."
      },
      "Northis.Upstream.ApiGateway.Modules.Configurator.Signals.Models.SignalInputRequest": {
        "type": "object",
        "properties": {
          "decimalDigitsCount": {
            "type": "integer",
            "description": "Возвращает количество десятичных разрядов.",
            "format": "int32"
          },
          "isAccumulator": {
            "type": "boolean",
            "description": "Возвращает значение, определяющее, что сигнал представляет накопительный счетчик."
          },
          "name": {
            "type": "string",
            "description": "Возвращает имя сигнала."
          },
          "normalization": {
            "$ref": "#/components/schemas/Northis.Upstream.ApiGateway.Modules.Configurator.Signals.Models.NormalizationInfo"
          },
          "presentation": {
            "$ref": "#/components/schemas/Northis.Upstream.ApiGateway.Modules.Configurator.Signals.Models.PresentationType"
          },
          "signalTypeId": {
            "type": "string",
            "description": "Возвращает идентификатор типа сигнала.",
            "format": "uuid",
            "nullable": true
          },
          "sumDivisor": {
            "type": "number",
            "description": "Возвращает делитель для суммы.",
            "format": "float",
            "nullable": true
          },
          "trendId": {
            "type": "string",
            "description": "Возвращает идентификатор тренда."
          },
          "workMinValue": {
            "type": "number",
            "description": "Возвращает минимальное значение в работе.",
            "format": "float",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Определяет данные для создания/изменения метаданных сигнала."
      },
      "Northis.Upstream.ApiGateway.Modules.Configurator.SignalsMesExportMetadata.Models.SignalMesExportMetadataInputRequest": {
        "type": "object",
        "properties": {
          "equipmentId": {
            "type": "string",
            "description": "Возвращает идентификатор оборудования."
          },
          "parameter": {
            "type": "string",
            "description": "Возвращает параметр метаданных.",
            "nullable": true
          },
          "signalId": {
            "type": "string",
            "description": "Возвращает идентификатор сигнала.",
            "format": "uuid"
          }
        },
        "additionalProperties": false,
        "description": "Представляет запрос ввода метаданных экспорта сигнала в MES."
      },
      "Northis.Upstream.ApiGateway.Modules.Configurator.Telegrams.Models.ChangeTelegramDescriptorRequestData": {
        "type": "object",
        "properties": {
          "displayName": {
            "type": "string",
            "description": "Отображаемое имя телеграммы.",
            "nullable": true
          },
          "parameters": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Northis.Upstream.ApiGateway.Modules.Configurator.Telegrams.Models.CreateParameterDescriptor"
            },
            "description": "Параметры.",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Представляет данные для изменения телеграммы."
      },
      "Northis.Upstream.ApiGateway.Modules.Configurator.Telegrams.Models.CreateParameterDescriptor": {
        "type": "object",
        "properties": {
          "displayName": {
            "type": "string",
            "description": "Отображаемое имя параметра"
          },
          "parameterId": {
            "type": "string",
            "description": "Уникальный идентификатор параметра."
          },
          "typeMetadataId": {
            "type": "string",
            "description": "Идентификатор типа метаданных.",
            "format": "uuid"
          }
        },
        "additionalProperties": false,
        "description": "Представляет DTO создания параметра дескриптора."
      },
      "Northis.Upstream.ApiGateway.Modules.Configurator.Telegrams.Models.CreateTelegramDescriptorRequest": {
        "type": "object",
        "properties": {
          "telegramId": {
            "type": "string",
            "description": "Уникальный идентификатор телеграммы."
          },
          "displayName": {
            "type": "string",
            "description": "Отображаемое имя телеграммы."
          },
          "parameters": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Northis.Upstream.ApiGateway.Modules.Configurator.Telegrams.Models.CreateParameterDescriptor"
            },
            "description": "Параметры."
          }
        },
        "additionalProperties": false,
        "description": "Определяет данные запроса создания описания телеграммы."
      },
      "Northis.Upstream.ApiGateway.Modules.Configurator.Telegrams.Models.ParameterDescriptor": {
        "type": "object",
        "properties": {
          "displayName": {
            "type": "string",
            "description": "Отображаемое имя параметра"
          },
          "parameterId": {
            "type": "string",
            "description": "Уникальный идентификатор параметра."
          },
          "typeMetadata": {
            "$ref": "#/components/schemas/Northis.Upstream.ApiGateway.Modules.Configurator.Types.Models.TypeMetadata"
          }
        },
        "additionalProperties": false,
        "description": "Представляет описание параметра телеграммы."
      },
      "Northis.Upstream.ApiGateway.Modules.Configurator.Telegrams.Models.TelegramDescriptor": {
        "type": "object",
        "properties": {
          "telegramId": {
            "type": "string",
            "description": "Уникальный идентификатор телеграммы."
          },
          "displayName": {
            "type": "string",
            "description": "Отображаемое имя телеграммы."
          },
          "descriptorState": {
            "type": "string",
            "description": "Уникальный идентификатор телеграммы."
          }
        },
        "additionalProperties": false,
        "description": "Представляет описание телеграммы."
      },
      "Northis.Upstream.ApiGateway.Modules.Configurator.TrendGrouping.Models.ChangeTrendGroupRequest": {
        "type": "object",
        "properties": {
          "newName": {
            "type": "string",
            "description": "Изменяемое наименование."
          }
        },
        "additionalProperties": false,
        "description": "Данные для изменения группы трендов."
      },
      "Northis.Upstream.ApiGateway.Modules.Configurator.TrendGrouping.Models.CreateTrendGroupRequest": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Наименование."
          },
          "parentId": {
            "type": "string",
            "description": "Идентификатор родительской группы.",
            "format": "uuid",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Данные для создания группы трендов."
      },
      "Northis.Upstream.ApiGateway.Modules.Configurator.TrendGrouping.Models.FilterItem": {
        "type": "object",
        "properties": {
          "groupName": {
            "type": "string",
            "description": "Возвращает или устанавливает значение фильтра по имени группы.",
            "nullable": true
          },
          "trendName": {
            "type": "string",
            "description": "Возвращает или устанавливает значение фильтра по имени тренда.",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Определяет критерий фильтрации."
      },
      "Northis.Upstream.ApiGateway.Modules.Configurator.TrendGrouping.Models.GroupFilterRequest": {
        "type": "object",
        "properties": {
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Northis.Upstream.ApiGateway.Modules.Configurator.TrendGrouping.Models.FilterItem"
            },
            "description": "Возвращает или устанавливает критерии фильтрации.",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Определяет данные запроса для фильтрации групп трендов."
      },
      "Northis.Upstream.ApiGateway.Modules.Configurator.TrendGrouping.Models.Trend": {
        "type": "object",
        "properties": {
          "trendId": {
            "type": "string",
            "description": "Идентификатор тренда."
          },
          "name": {
            "type": "string",
            "description": "Наименование тренда."
          },
          "typeMetadata": {
            "type": "string",
            "description": "Тип тренда."
          }
        },
        "additionalProperties": false,
        "description": "Определяет тренд."
      },
      "Northis.Upstream.ApiGateway.Modules.Configurator.TrendGrouping.Models.TrendGroup": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Идентификатор.",
            "format": "uuid"
          },
          "name": {
            "type": "string",
            "description": "Наименование."
          },
          "parentId": {
            "type": "string",
            "description": "Идентификатор родительской группы.",
            "format": "uuid",
            "nullable": true
          },
          "isFilteredSatisfied": {
            "type": "boolean",
            "description": "Флаг, определяющий, соответствует ли группа критериям фильтрации.",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Определяет группу трендов."
      },
      "Northis.Upstream.ApiGateway.Modules.Configurator.TrendGrouping.Models.TrendsByGroupRequestCriteria": {
        "type": "object",
        "properties": {
          "filters": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Northis.Upstream.ApiGateway.Modules.Configurator.TrendGrouping.Models.FilterItem"
            },
            "description": "Возвращает или устанавливает критерии фильтрации.",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Определяет критерии запроса для выборки трендов в группе."
      },
      "Northis.Upstream.ApiGateway.Modules.Configurator.TrendKafkaExportMetadata.Models.TrendKafkaExportMetadataDetails": {
        "type": "object",
        "properties": {
          "comment": {
            "type": "string",
            "description": "Возвращает комментарий.",
            "nullable": true
          },
          "dataTopic": {
            "type": "string",
            "description": "Возвращает имя топика данных."
          },
          "ibaId": {
            "type": "string",
            "description": "Возвращает идентификатор iba.",
            "nullable": true
          },
          "id": {
            "type": "string",
            "description": "Возвращает идентификатор.",
            "format": "uuid"
          },
          "metadataTopic": {
            "type": "string",
            "description": "Возвращает имя топика метаданных."
          },
          "trend": {
            "$ref": "#/components/schemas/Northis.Upstream.ApiGateway.Modules.Configurator.Signals.Models.RelatedTrend"
          }
        },
        "additionalProperties": false,
        "description": "Определяет метаданные экспорта тренда."
      },
      "Northis.Upstream.ApiGateway.Modules.Configurator.TrendKafkaExportMetadata.Models.TrendKafkaExportMetadataInputRequest": {
        "type": "object",
        "properties": {
          "comment": {
            "type": "string",
            "description": "Возвращает комментарий.",
            "nullable": true
          },
          "dataTopic": {
            "type": "string",
            "description": "Возвращает имя топика данных."
          },
          "ibaId": {
            "type": "string",
            "description": "Возвращает идентификатор iba.",
            "nullable": true
          },
          "metadataTopic": {
            "type": "string",
            "description": "Возвращает имя топика метаданных."
          },
          "trendId": {
            "type": "string",
            "description": "Возвращает идентификатор тренда."
          }
        },
        "additionalProperties": false,
        "description": "Определяет входные данные для конфигурирования метаданных экспорта тренда."
      },
      "Northis.Upstream.ApiGateway.Modules.Configurator.TrendKafkaExportMetadata.Models.TrendKafkaExportMetadataView": {
        "type": "object",
        "properties": {
          "comment": {
            "type": "string",
            "description": "Возвращает комментарий.",
            "nullable": true
          },
          "dataTopic": {
            "type": "string",
            "description": "Возвращает имя топика данных."
          },
          "id": {
            "type": "string",
            "description": "Возвращает идентификатор.",
            "format": "uuid"
          },
          "metadataTopic": {
            "type": "string",
            "description": "Возвращает имя топика метаданных."
          },
          "trend": {
            "$ref": "#/components/schemas/Northis.Upstream.ApiGateway.Modules.Configurator.Signals.Models.RelatedTrend"
          }
        },
        "additionalProperties": false,
        "description": "Определяет метаданные экспорта тренда для отображения."
      },
      "Northis.Upstream.ApiGateway.Modules.Configurator.Trends.Models.AggregationMetadata": {
        "type": "object",
        "properties": {
          "aggrFunc": {
            "type": "string",
            "description": "Функция функцию агрегации."
          },
          "period": {
            "type": "string",
            "description": "Период аккумуляции."
          }
        },
        "additionalProperties": false,
        "description": "Представляет аккумуляцию данных."
      },
      "Northis.Upstream.ApiGateway.Modules.Configurator.Trends.Models.ChangeTrendDescriptorRequest": {
        "type": "object",
        "properties": {
          "displayName": {
            "type": "string",
            "description": "Отображаемое имя."
          },
          "aggregationMetadata": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Northis.Upstream.ApiGateway.Modules.Configurator.Trends.Models.AggregationMetadata"
            },
            "description": "Список агрегаций данных."
          }
        },
        "additionalProperties": false,
        "description": "Определяет данные для изменения тренда."
      },
      "Northis.Upstream.ApiGateway.Modules.Configurator.Trends.Models.CreateTrendDescriptorRequest": {
        "type": "object",
        "properties": {
          "trendId": {
            "type": "string",
            "description": "Идентификатор описания тренда."
          },
          "displayName": {
            "type": "string",
            "description": "Отображаемое имя."
          },
          "typeMetadataId": {
            "type": "string",
            "description": "Тип данных.",
            "format": "uuid"
          },
          "aggregationMetadata": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Northis.Upstream.ApiGateway.Modules.Configurator.Trends.Models.AggregationMetadata"
            },
            "description": "Список агрегаций данных."
          }
        },
        "additionalProperties": false,
        "description": "Определяет данные для создания дескриптора тренда."
      },
      "Northis.Upstream.ApiGateway.Modules.Configurator.Trends.Models.DescriptorMetadata": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Идентификатор",
            "format": "uuid"
          },
          "displayName": {
            "type": "string",
            "description": "Отображаемое имя."
          }
        },
        "additionalProperties": false,
        "description": "Представляет DTO метаданных в дескрипторе."
      },
      "Northis.Upstream.ApiGateway.Modules.Configurator.Trends.Models.TrendDescriptor": {
        "type": "object",
        "properties": {
          "trendId": {
            "type": "string",
            "description": "Идентификатор описания тренда."
          },
          "displayName": {
            "type": "string",
            "description": "Отображаемой имя дескриптора."
          },
          "typeMetadata": {
            "$ref": "#/components/schemas/Northis.Upstream.ApiGateway.Modules.Configurator.Trends.Models.DescriptorMetadata"
          },
          "aggregationMetadata": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Northis.Upstream.ApiGateway.Modules.Configurator.Trends.Models.AggregationMetadata"
            },
            "description": "Список агрегаций данных."
          },
          "state": {
            "type": "string",
            "description": "Состояние описания тренда."
          }
        },
        "additionalProperties": false,
        "description": "Представляет описание тренда."
      },
      "Northis.Upstream.ApiGateway.Modules.Configurator.Trends.Models.TrendDescriptorDetails": {
        "type": "object",
        "properties": {
          "trendId": {
            "type": "string",
            "description": "Идентификатор тренда."
          },
          "displayName": {
            "type": "string",
            "description": "Отображаемое имя."
          },
          "typeMetadata": {
            "$ref": "#/components/schemas/Northis.Upstream.ApiGateway.Modules.Configurator.Types.Models.TypeMedataDetails"
          },
          "aggregationMetadata": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Northis.Upstream.ApiGateway.Modules.Configurator.Trends.Models.AggregationMetadata"
            },
            "description": "Метаданные агрегаций."
          },
          "state": {
            "type": "string",
            "description": "Состояние (Ready, NotReady)."
          }
        },
        "additionalProperties": false,
        "description": "Описывает DTO описателя тренда в детальном виде."
      },
      "Northis.Upstream.ApiGateway.Modules.Configurator.Trends.Models.TrendImport": {
        "type": "object",
        "properties": {
          "displayName": {
            "type": "string",
            "description": "Возвращает отображаемое имя."
          },
          "group": {
            "type": "string",
            "description": "Возвращает полный путь к тренду в группе.",
            "nullable": true
          },
          "trendId": {
            "type": "string",
            "description": "Возвращает идентификатор тренда."
          },
          "typeMetadataName": {
            "type": "string",
            "description": "Возвращает наименование типа данных."
          },
          "validationStatus": {
            "$ref": "#/components/schemas/Northis.Upstream.ApiGateway.Modules.Configurator.Trends.Models.TrendImportValidationStatus"
          }
        },
        "additionalProperties": false,
        "description": "Определяет данные импортируемого тренда."
      },
      "Northis.Upstream.ApiGateway.Modules.Configurator.Trends.Models.TrendImportValidationStatus": {
        "enum": [
          "NoError",
          "TypeIsNotExists",
          "TrendNameIsEmpty",
          "TrendIdIsNotUnique",
          "TypeNameIsEmpty",
          "TrendIdIsNotValid",
          "TrendIdAlreadyExists",
          "TrendGroupNameIsEmpty"
        ],
        "type": "string",
        "description": "Перечисляет статусы валидации импорта трендов."
      },
      "Northis.Upstream.ApiGateway.Modules.Configurator.Trends.Models.TypeKind": {
        "enum": [
          "Numeric",
          "ValueSet"
        ],
        "type": "string",
        "description": "Представляет возможные виды типов трендов."
      },
      "Northis.Upstream.ApiGateway.Modules.Configurator.Types.Models.ChangeNumericTypeRequest": {
        "type": "object",
        "properties": {
          "displayName": {
            "type": "string",
            "description": "Строковое представление."
          },
          "measure": {
            "type": "string",
            "description": "Размерность значения.",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Представляет данные для изменения описания численного типа данных."
      },
      "Northis.Upstream.ApiGateway.Modules.Configurator.Types.Models.ChangeValueSetTypeRequest": {
        "type": "object",
        "properties": {
          "displayName": {
            "type": "string",
            "description": "Строковое представление."
          },
          "values": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Northis.Upstream.ApiGateway.Modules.Configurator.Types.Models.ValueSetElement"
            },
            "description": "Набор значений."
          }
        },
        "additionalProperties": false,
        "description": "Представляет данные для изменения описания типа данных, имеющего набор значений."
      },
      "Northis.Upstream.ApiGateway.Modules.Configurator.Types.Models.CreateNumericTypeRequest": {
        "type": "object",
        "properties": {
          "displayName": {
            "type": "string",
            "description": "Строковое представление."
          },
          "valueType": {
            "type": "string",
            "description": "Числовой тип. (Int, Float)."
          },
          "measure": {
            "type": "string",
            "description": "Размерность значения.",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Представляет данные для создания описания численного типа данных."
      },
      "Northis.Upstream.ApiGateway.Modules.Configurator.Types.Models.CreateValueSetTypeRequest": {
        "type": "object",
        "properties": {
          "displayName": {
            "type": "string",
            "description": "Строковое представление."
          },
          "values": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Northis.Upstream.ApiGateway.Modules.Configurator.Types.Models.ValueSetElement"
            },
            "description": "набор значений."
          }
        },
        "additionalProperties": false,
        "description": "Представляет данные для создания описания типа данных, имеющего набор значений."
      },
      "Northis.Upstream.ApiGateway.Modules.Configurator.Types.Models.NumericTypeMetadata": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Уникальный идентификатор.",
            "format": "uuid"
          },
          "displayName": {
            "type": "string",
            "description": "Строковое представление."
          },
          "valueType": {
            "type": "string",
            "description": "Числовой тип. (Int, Float)."
          },
          "measure": {
            "type": "string",
            "description": "Размерность значения.",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Представляет описание численного типа."
      },
      "Northis.Upstream.ApiGateway.Modules.Configurator.Types.Models.TypeMedataDetails": {
        "type": "object",
        "properties": {
          "numeric": {
            "$ref": "#/components/schemas/Northis.Upstream.ApiGateway.Modules.Configurator.Types.Models.NumericTypeMetadata"
          },
          "valueSet": {
            "$ref": "#/components/schemas/Northis.Upstream.ApiGateway.Modules.Configurator.Types.Models.ValueSetTypeMetadata"
          }
        },
        "additionalProperties": false,
        "description": "Представляет детали типа метаданных."
      },
      "Northis.Upstream.ApiGateway.Modules.Configurator.Types.Models.TypeMetadata": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Уникальный идентификатор.",
            "format": "uuid"
          },
          "displayName": {
            "type": "string",
            "description": "Строковое представление."
          },
          "onNumeric": {
            "$ref": "#/components/schemas/Northis.Upstream.ApiGateway.Modules.Configurator.Types.Models.TypeMetadata+OnNumericTypeMetadata"
          },
          "onValueSet": {
            "$ref": "#/components/schemas/Northis.Upstream.ApiGateway.Modules.Configurator.Types.Models.TypeMetadata+OnValueSetTypeMetadata"
          }
        },
        "additionalProperties": false,
        "description": "Представляет описание типа."
      },
      "Northis.Upstream.ApiGateway.Modules.Configurator.Types.Models.TypeMetadata+OnNumericTypeMetadata": {
        "type": "object",
        "properties": {
          "valueType": {
            "type": "string",
            "description": "Тип значения."
          },
          "measure": {
            "type": "string",
            "description": "Размерность.",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Представляет расширение числового типа метаданных."
      },
      "Northis.Upstream.ApiGateway.Modules.Configurator.Types.Models.TypeMetadata+OnValueSetTypeMetadata": {
        "type": "object",
        "properties": {
          "values": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Northis.Upstream.ApiGateway.Modules.Configurator.Types.Models.ValueSetElement"
            },
            "description": "Коллекция элементов ValueSet."
          }
        },
        "additionalProperties": false,
        "description": "Представляет расширение словаря типа метаданных."
      },
      "Northis.Upstream.ApiGateway.Modules.Configurator.Types.Models.ValueSetElement": {
        "type": "object",
        "properties": {
          "value": {
            "type": "integer",
            "description": "Значение тренда приходящее из контроллера.",
            "format": "int32"
          },
          "description": {
            "type": "string",
            "description": "Описание (расшифровка) данного значение."
          }
        },
        "additionalProperties": false,
        "description": "Представляет элемент ValueSet."
      },
      "Northis.Upstream.ApiGateway.Modules.Configurator.Types.Models.ValueSetTypeMetadata": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Уникальный идентификатор.",
            "format": "uuid"
          },
          "displayName": {
            "type": "string",
            "description": "Строковое представление."
          },
          "values": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Northis.Upstream.ApiGateway.Modules.Configurator.Types.Models.ValueSetElement"
            },
            "description": "Набор значений."
          }
        },
        "additionalProperties": false,
        "description": "Представляет описание типа, имеющего набор значений."
      },
      "Northis.Upstream.Common.Application.Queries.Portions.PortionItems`1[Northis.Upstream.ApiGateway.Modules.Configurator.TrendKafkaExportMetadata.Models.TrendKafkaExportMetadataView]": {
        "type": "object",
        "properties": {
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Northis.Upstream.ApiGateway.Modules.Configurator.TrendKafkaExportMetadata.Models.TrendKafkaExportMetadataView"
            }
          },
          "totalCount": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "Northis.Upstream.Common.Application.Queries.Portions.PortionItems`1[Northis.Upstream.Configurator.Contracts.Dto.Collector.CollectorCollectionViewDto]": {
        "type": "object",
        "properties": {
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Northis.Upstream.Configurator.Contracts.Dto.Collector.CollectorCollectionViewDto"
            }
          },
          "totalCount": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "Northis.Upstream.Common.Application.Queries.Portions.PortionItems`1[Northis.Upstream.MesConnector.Contracts.SignalMesExportMetadataViewDto]": {
        "type": "object",
        "properties": {
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Northis.Upstream.MesConnector.Contracts.SignalMesExportMetadataViewDto"
            }
          },
          "totalCount": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "Northis.Upstream.Common.Application.Relations.ObjectsRelationDto": {
        "type": "object",
        "properties": {
          "objectName": {
            "type": "string"
          },
          "relatedObjectName": {
            "type": "string"
          },
          "relatedObjectType": {
            "$ref": "#/components/schemas/Northis.Upstream.Common.Application.Relations.RelatedObjectType"
          }
        },
        "additionalProperties": false
      },
      "Northis.Upstream.Common.Application.Relations.RelatedObjectType": {
        "enum": [
          "Trend",
          "TelegramParameter",
          "Signal",
          "Downtime",
          "KafkaConnector"
        ],
        "type": "string"
      },
      "Northis.Upstream.Configurator.Contracts.Dto.Collector.AdapterCollectionViewDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "name": {
            "type": "string"
          },
          "type": {
            "$ref": "#/components/schemas/Northis.Upstream.Configurator.Contracts.Dto.Collector.AdapterTypeDto"
          }
        },
        "additionalProperties": false
      },
      "Northis.Upstream.Configurator.Contracts.Dto.Collector.AdapterCreateDto": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "type": {
            "$ref": "#/components/schemas/Northis.Upstream.Configurator.Contracts.Dto.Collector.AdapterTypeDto"
          },
          "connection": { },
          "data": { }
        },
        "additionalProperties": false
      },
      "Northis.Upstream.Configurator.Contracts.Dto.Collector.AdapterSingleViewDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "name": {
            "type": "string"
          },
          "type": {
            "$ref": "#/components/schemas/Northis.Upstream.Configurator.Contracts.Dto.Collector.AdapterTypeDto"
          },
          "connection": { },
          "data": { }
        },
        "additionalProperties": false
      },
      "Northis.Upstream.Configurator.Contracts.Dto.Collector.AdapterTypeDto": {
        "enum": [
          "File",
          "OPC",
          "IbaHD",
          "TCP",
          "PitramCarriages",
          "PitramBunkers",
          "CAN",
          "IcpConCAN",
          "CRQ",
          "RTech",
          "DataLink"
        ],
        "type": "string"
      },
      "Northis.Upstream.Configurator.Contracts.Dto.Collector.AdapterUpdateDto": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "connection": { },
          "data": { }
        },
        "additionalProperties": false
      },
      "Northis.Upstream.Configurator.Contracts.Dto.Collector.CollectorCollectionViewDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "collectorId": {
            "type": "string"
          },
          "description": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Northis.Upstream.Configurator.Contracts.Dto.Collector.CollectorCreateDto": {
        "type": "object",
        "properties": {
          "collectorId": {
            "type": "string"
          },
          "description": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Northis.Upstream.Configurator.Contracts.Dto.Collector.CollectorSingleViewDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "collectorId": {
            "type": "string"
          },
          "description": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Northis.Upstream.Configurator.Contracts.Dto.Collector.CollectorUpdateDto": {
        "type": "object",
        "properties": {
          "collectorId": {
            "type": "string"
          },
          "description": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Northis.Upstream.Configurator.Contracts.Dto.Collector.TrendsForConfigure.TrendForConfigureRequestDto": {
        "type": "object",
        "properties": {
          "excludeTrendsIds": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "filters": {
            "$ref": "#/components/schemas/Northis.Upstream.Configurator.Contracts.Dto.Collector.TrendsForConfigure.TrendsForConfigureFiltersDto"
          },
          "includeTrendsIds": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "isDescending": {
            "type": "boolean",
            "nullable": true
          },
          "pageNumber": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "pageSize": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "propertyName": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Northis.Upstream.Configurator.Contracts.Dto.Collector.TrendsForConfigure.TrendsForConfigureByGroupRequestDto": {
        "type": "object",
        "properties": {
          "excludeTrendsIds": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "filters": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Northis.Upstream.Configurator.Contracts.TrendGrouping.FilterItemDto"
            },
            "nullable": true
          },
          "includeTrendsIds": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "isDescending": {
            "type": "boolean",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "pageNumber": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "pageSize": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "propertyName": {
            "type": "string",
            "nullable": true
          },
          "trendTypeKind": {
            "$ref": "#/components/schemas/Northis.Upstream.Configurator.Contracts.Dto.TrendDescriptor.TypeKindDto"
          },
          "typeName": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Northis.Upstream.Configurator.Contracts.Dto.Collector.TrendsForConfigure.TrendsForConfigureFiltersDto": {
        "type": "object",
        "properties": {
          "displayName": {
            "type": "string",
            "nullable": true
          },
          "trendId": {
            "type": "string",
            "nullable": true
          },
          "typeName": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Northis.Upstream.Configurator.Contracts.Dto.Collector.TrendsImport.ImportTrendDescriptorsResult": {
        "type": "object",
        "properties": {
          "importedTrendDescriptors": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Northis.Upstream.Configurator.Contracts.Dto.Collector.TrendsImport.ImportedTrendDescriptorDto"
            }
          },
          "notImportedTrendIds": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        },
        "additionalProperties": false
      },
      "Northis.Upstream.Configurator.Contracts.Dto.Collector.TrendsImport.ImportedTrendDescriptorDto": {
        "type": "object",
        "properties": {
          "address": {
            "type": "string"
          },
          "id": {
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "Northis.Upstream.Configurator.Contracts.Dto.Collector.TrendsImport.TrendDescriptorImportDto": {
        "type": "object",
        "properties": {
          "address": {
            "type": "string"
          },
          "displayName": {
            "type": "string"
          },
          "group": {
            "type": "string",
            "nullable": true
          },
          "id": {
            "type": "string"
          },
          "typeMetadataName": {
            "type": "string"
          },
          "validationStatus": {
            "$ref": "#/components/schemas/Northis.Upstream.Configurator.Contracts.Dto.Collector.TrendsImport.TrendDescriptorImportValidationStatusDto"
          }
        },
        "additionalProperties": false
      },
      "Northis.Upstream.Configurator.Contracts.Dto.Collector.TrendsImport.TrendDescriptorImportValidationStatusDto": {
        "enum": [
          "NoError",
          "TypeIsNotExists",
          "TrendNameIsEmpty",
          "TrendAddressIsEmpty",
          "TrendIdIsNotUnique",
          "TypeNameIsEmpty",
          "TrendIdIsNotValid",
          "TrendAlreadyBind",
          "TrendGroupNameIsEmpty"
        ],
        "type": "string"
      },
      "Northis.Upstream.Configurator.Contracts.Dto.TelegramDescriptor.DescriptorState": {
        "enum": [
          "Ready",
          "NotReady"
        ],
        "type": "string"
      },
      "Northis.Upstream.Configurator.Contracts.Dto.TrendDescriptor.TypeKindDto": {
        "enum": [
          "Numeric",
          "ValueSet"
        ],
        "type": "string"
      },
      "Northis.Upstream.Configurator.Contracts.Dto.TypeMetadata.MetadataType": {
        "enum": [
          "ValueSet",
          "Numeric"
        ],
        "type": "string"
      },
      "Northis.Upstream.Configurator.Contracts.TrendGrouping.FilterItemDto": {
        "type": "object",
        "properties": {
          "groupName": {
            "type": "string",
            "nullable": true
          },
          "trendName": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Northis.Upstream.MesConnector.Contracts.EquipmentDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "equipmentCode": {
            "type": "string"
          },
          "name": {
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "Northis.Upstream.MesConnector.Contracts.SignalDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "Northis.Upstream.MesConnector.Contracts.SignalMesExportMetadataViewDto": {
        "type": "object",
        "properties": {
          "equipment": {
            "$ref": "#/components/schemas/Northis.Upstream.MesConnector.Contracts.EquipmentDto"
          },
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "parameter": {
            "type": "string",
            "nullable": true
          },
          "signal": {
            "$ref": "#/components/schemas/Northis.Upstream.MesConnector.Contracts.SignalDto"
          }
        },
        "additionalProperties": false
      }
    }
  },
  "tags": [
    {
      "name": "Trends",
      "description": "Определяет API для управления хранением трендов."
    },
    {
      "name": "TypesMetadata",
      "description": "Определяет API конфигурирования типов."
    },
    {
      "name": "TrendKafkaExportMetadata",
      "description": "Определяет API конфигурирования метаданных экспорта тренда в Kafka."
    },
    {
      "name": "TrendGroups",
      "description": "Определяет API управления группами трендов."
    },
    {
      "name": "Telegrams",
      "description": "Определяет API конфигурирования телеграмм."
    },
    {
      "name": "SignalTypes",
      "description": "Определяет API для управления типами сигналов."
    },
    {
      "name": "SignalsMesExportMetadata",
      "description": "Определяет API конфигурирования параметров экспорта сигналов в Mes."
    },
    {
      "name": "Signals",
      "description": "Определяет API для управления хранением сигналов."
    },
    {
      "name": "SignalGroups",
      "description": "Определяет API конфигурирования группы сигналов."
    },
    {
      "name": "Indicators",
      "description": "Определяет API конфигурирования индикаторов."
    },
    {
      "name": "Metadata",
      "description": "Определяет API конфигурирования метаданных интеграции с Mes."
    },
    {
      "name": "ProductionUnits",
      "description": "Определяет API конфигурирования производственных единиц."
    },
    {
      "name": "Equipments",
      "description": "Определяет API получения оборудования SAP."
    },
    {
      "name": "Downtimes",
      "description": "Определяет API конфигурирования простоев."
    },
    {
      "name": "Collectors",
      "description": "Определяет API для работы с коллекторами."
    }
  ]
}